#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ú–æ–π–°–∫–ª–∞–¥ API
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
sys.path.append('backend')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings.base')
django.setup()

from apps.sync.moysklad_client import MoySkladClient
from django.conf import settings
import logging

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_moysklad_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ú–æ–π–°–∫–ª–∞–¥ API"""
    
    print("=== –¢–ï–°–¢ –°–û–ï–î–ò–ù–ï–ù–ò–Ø –° –ú–û–ô–°–ö–õ–ê–î API ===")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = settings.MOYSKLAD_CONFIG
    print("üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"  Base URL: {config['base_url']}")
    print(f"  Token configured: {'‚úÖ –î–∞' if config.get('token') else '‚ùå –ù–µ—Ç'}")
    print(f"  Token length: {len(config.get('token', ''))}")
    print(f"  Default warehouse: {config.get('default_warehouse_id', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
    print(f"  Rate limit: {config.get('rate_limit', 5)} req/sec")
    print(f"  Timeout: {config.get('timeout', 30)} seconds")
    print()
    
    if not config.get('token'):
        print("‚ùå –û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω –ú–æ–π–°–∫–ª–∞–¥ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è MOYSKLAD_TOKEN")
        return False
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        client = MoySkladClient()
        print("‚úÖ –ö–ª–∏–µ–Ω—Ç –ú–æ–π–°–∫–ª–∞–¥ —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        print("\nüîó –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ...")
        if client.test_connection():
            print("‚úÖ –ë–∞–∑–æ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
        else:
            print("‚ùå –ë–∞–∑–æ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–∫–ª–∞–¥—ã
        print("\nüì¶ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤...")
        warehouses = client.get_warehouses()
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(warehouses)} —Å–∫–ª–∞–¥–æ–≤:")
        for warehouse in warehouses[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            print(f"  - {warehouse['name']} (ID: {warehouse['id']})")
        
        # –ü–æ–ª—É—á–∞–µ–º –≥—Ä—É–ø–ø—ã —Ç–æ–≤–∞—Ä–æ–≤
        print("\nüìÅ –ü–æ–ª—É—á–∞–µ–º –≥—Ä—É–ø–ø—ã —Ç–æ–≤–∞—Ä–æ–≤...")
        groups = client.get_product_groups()
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(groups)} –≥—Ä—É–ø–ø —Ç–æ–≤–∞—Ä–æ–≤:")
        for group in groups[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            print(f"  - {group['name']} (ID: {group['id']})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫–ª–∞–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        default_warehouse_id = config.get('default_warehouse_id')
        if default_warehouse_id:
            default_warehouse = next(
                (w for w in warehouses if w['id'] == default_warehouse_id), 
                None
            )
            if default_warehouse:
                print(f"\nüè≠ –°–∫–ª–∞–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {default_warehouse['name']}")
            else:
                print(f"\n‚ö†Ô∏è –°–∫–ª–∞–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å ID {default_warehouse_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        
        print("\n‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("–ú–æ–π–°–∫–ª–∞–¥ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {str(e)}")
        print(f"–¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        if "401" in str(e) or "Unauthorized" in str(e):
            print("\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:")
            print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –ú–æ–π–°–∫–ª–∞–¥")
            print("- –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ç–æ–∫–µ–Ω –Ω–µ –∏—Å—Ç–µ–∫")
            print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —Ç–æ–∫–µ–Ω–∞")
        elif "timeout" in str(e).lower() or "connection" in str(e).lower():
            print("\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:")
            print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
            print("- –í–æ–∑–º–æ–∂–Ω—ã –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å API –ú–æ–π–°–∫–ª–∞–¥")
            print("- –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å timeout –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        elif "403" in str(e) or "Forbidden" in str(e):
            print("\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:")
            print("- –£ —Ç–æ–∫–µ–Ω–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
            print("- –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –ú–æ–π–°–∫–ª–∞–¥")
        
        return False

if __name__ == "__main__":
    success = test_moysklad_connection()
    sys.exit(0 if success else 1)