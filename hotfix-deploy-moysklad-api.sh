#!/bin/bash

# PrintFarm v3.3.4 - MoySklad API Hotfix Deployment
# Fixes production issues with warehouses/product groups not loading

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Server configuration
SERVER_HOST="kemomail3.keenetic.pro"
SERVER_USER="printfarm"
SERVER_PORT="2131"
SERVER_IP="192.168.1.98"
COMPOSE_FILE="docker-compose.server.prod.yml"
BRANCH="hotfix/production-moysklad-api-fix"

log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')] $1${NC}"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

show_fixes() {
    cat << 'FIXES_EOF'

üîß MoySklad API Hotfix v3.3.4 - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:

‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π .env.prod —Ñ–∞–π–ª (—É–¥–∞–ª–µ–Ω "EOF < /dev/null")
‚úÖ –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ API –≤ frontend (client.ts)
‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ API URL –¥–ª—è production
‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (sync.ts)
‚úÖ –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (settings.ts) 
‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è production –¥–æ—Å—Ç—É–ø–∞
‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

–ü—Ä–æ–±–ª–µ–º—ã –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —ç—Ç–æ—Ç hotfix:
- üè≠ –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
- üìÇ –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –≥—Ä—É–ø–ø—ã —Ç–æ–≤–∞—Ä–æ–≤  
- ‚öôÔ∏è –û—à–∏–±–∫–∏ API –≤ —Ä–∞–∑–¥–µ–ª–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
- üåê CORS –∏ network connectivity –ø—Ä–æ–±–ª–µ–º—ã
- üîê –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –≤ production

FIXES_EOF
}

test_local_apis() {
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö API endpoints..."
    
    # Test if backend is running
    if ! curl -s http://localhost:8000/api/v1/settings/system-info/ > /dev/null 2>&1; then
        warning "Backend –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ. –ó–∞–ø—É—Å–∫–∞–µ–º..."
        cd backend
        python3 manage.py runserver &
        BACKEND_PID=$!
        sleep 5
        cd ..
    fi
    
    # Test critical endpoints
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ endpoints..."
    
    if curl -s http://localhost:8000/api/v1/sync/warehouses/ | grep -q '\[\]'; then
        warning "Warehouses API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤"
    else
        success "Warehouses API —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    if curl -s http://localhost:8000/api/v1/sync/product-groups/ | grep -q '\[\]'; then
        warning "Product groups API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤"  
    else
        success "Product groups API —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    if curl -s http://localhost:8000/api/v1/settings/system-info/ | grep -q 'v3.3.4'; then
        success "Settings API —Ä–∞–±–æ—Ç–∞–µ—Ç (v3.3.4)"
    else
        warning "Settings API –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    fi
}

deploy_to_server() {
    log "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    
    # Commit current changes
    if ! git diff --quiet || ! git diff --staged --quiet; then
        log "–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git..."
        git add .
        git commit -m "üî• Hotfix: Fix MoySklad API production issues

- Fix corrupted .env.prod file (EOF < /dev/null)
- Enhance API error handling with detailed logging
- Add production API URL auto-detection
- Improve sync modal diagnostics
- Update CORS settings for production access
- Add comprehensive error fallbacks

Fixes:
- Empty warehouses list in sync modal
- Missing product groups
- Settings tab API errors  
- CORS and connectivity issues"
    fi
    
    # Push to GitHub
    log "–ó–∞–≥—Ä—É–∂–∞–µ–º hotfix –Ω–∞ GitHub..."
    git push origin $BRANCH
    
    # Create deployment script for server
    cat > hotfix-server-deploy.sh << 'DEPLOY_EOF'
#!/bin/bash

# MoySklad API Hotfix - Server Deployment

set -e

BRANCH="hotfix/production-moysklad-api-fix"
COMPOSE_FILE="docker-compose.server.prod.yml"

echo "üî• MoySklad API Hotfix Deployment"
echo "=================================="

# Go to project directory
cd /opt/printfarm-production

# Backup current state
echo "üì¶ Creating backup..."
cp .env.prod .env.prod.backup.$(date +%Y%m%d_%H%M%S)

# Pull hotfix changes
echo "üì• Pulling hotfix from GitHub..."
git fetch origin
git checkout $BRANCH
git pull origin $BRANCH

# Stop containers
echo "üõë Stopping containers..."
docker-compose -f $COMPOSE_FILE down

# Rebuild with new fixes
echo "üî® Rebuilding with hotfix..."
docker-compose -f $COMPOSE_FILE build --no-cache

# Start containers
echo "üöÄ Starting fixed containers..."  
docker-compose -f $COMPOSE_FILE up -d

# Wait for startup
echo "‚è≥ Waiting for services to start..."
sleep 30

# Test critical endpoints
echo "üß™ Testing fixed APIs..."

echo "Testing system info:"
curl -s http://localhost:8001/api/v1/settings/system-info/ || echo "API not ready yet"

echo -e "\nTesting warehouses:"
WAREHOUSES_COUNT=$(curl -s http://localhost:8001/api/v1/sync/warehouses/ | grep -c '"id"' || echo 0)
echo "Found $WAREHOUSES_COUNT warehouses"

echo -e "\nTesting product groups:"
GROUPS_COUNT=$(curl -s http://localhost:8001/api/v1/sync/product-groups/ | grep -c '"id"' || echo 0)  
echo "Found $GROUPS_COUNT product groups"

# Show container status
echo -e "\nüìä Container status:"
docker-compose -f $COMPOSE_FILE ps

# Show recent logs
echo -e "\nüìù Recent logs (last 20 lines):"
docker-compose -f $COMPOSE_FILE logs --tail=20 backend

echo -e "\n‚úÖ Hotfix deployment completed!"
echo -e "\nüåê Access URLs:"
echo "   Main App: http://192.168.1.98:8080"
echo "   Backend API: http://192.168.1.98:8001/api/v1/"
echo "   Frontend: http://192.168.1.98:3001"

echo -e "\nüîç To check if issues are fixed:"
echo "   1. Open http://192.168.1.98:8080"
echo "   2. Click sync button - should show warehouses and groups"
echo "   3. Go to Settings tab - should not show API error"
echo "   4. Check browser console for detailed error logs"

DEPLOY_EOF

    chmod +x hotfix-server-deploy.sh
    
    # Upload deployment script
    log "–ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    scp -P $SERVER_PORT hotfix-server-deploy.sh $SERVER_USER@$SERVER_HOST:/opt/printfarm-production/
    
    success "Hotfix –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
}

show_deployment_commands() {
    cat << 'COMMANDS_EOF'

üöÄ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è hotfix –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:

1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É:
   ssh -p 2131 printfarm@kemomail3.keenetic.pro
   # –ü–∞—Ä–æ–ª—å: 1qaz2wsX

2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞:
   cd /opt/printfarm-production

3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ hotfix:
   bash hotfix-server-deploy.sh

4. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:
   - http://192.168.1.98:8080 - –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
   - –ö–Ω–æ–ø–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω–∞ –ø–æ–∫–∞–∑–∞—Ç—å —Å–∫–ª–∞–¥—ã –∏ –≥—Ä—É–ø–ø—ã —Ç–æ–≤–∞—Ä–æ–≤
   - –†–∞–∑–¥–µ–ª "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" –Ω–µ –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—à–∏–±–∫—É API

5. –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ —Å–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏:
   docker-compose -f docker-compose.server.prod.yml logs backend
   
6. –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)
   –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –ø–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ API –∑–∞–ø—Ä–æ—Å–æ–≤.

COMMANDS_EOF
}

main() {
    echo "üî• PrintFarm MoySklad API Hotfix v3.3.4"
    echo "========================================"
    
    show_fixes
    
    echo -n "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º hotfix? [y/N] "
    read -r response
    if [[ ! "$response" =~ ^[Yy]$ ]]; then
        log "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
        exit 0
    fi
    
    # Test local APIs first  
    test_local_apis
    
    # Deploy to server
    deploy_to_server
    
    # Show deployment commands
    show_deployment_commands
    
    success "üéâ MoySklad API Hotfix –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é!"
    warning "–°–ª–µ–¥—É–π—Ç–µ –∫–æ–º–∞–Ω–¥–∞–º –≤—ã—à–µ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–∞ production —Å–µ—Ä–≤–µ—Ä–µ"
}

main "$@"