#!/bin/sh

# PrintFarm Production Django Entrypoint Script

set -e

echo "üöÄ Starting PrintFarm Production Django..."

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ netcat –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
which nc > /dev/null || apt-get update && apt-get install -y netcat-openbsd

# –ñ–¥–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "‚è≥ Waiting for PostgreSQL..."
while ! nc -z db 5432 2>/dev/null; do
  echo "   PostgreSQL is not ready yet... waiting..."
  sleep 2
done
echo "‚úÖ PostgreSQL is ready!"

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üóÑÔ∏è Applying database migrations..."
python manage.py migrate --noinput

# –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (—Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã)
echo "üì¶ Collecting static files..."
python manage.py collectstatic --noinput

# –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
python manage.py shell << EOF || true
from django.contrib.auth import get_user_model
User = get_user_model()
if not User.objects.filter(is_superuser=True).exists():
    print("‚ÑπÔ∏è No superuser found. Please create one using 'docker-compose exec backend python manage.py createsuperuser'")
else:
    print("‚úÖ Superuser exists")
EOF

echo "‚úÖ Django is ready!"

# –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
exec "$@"