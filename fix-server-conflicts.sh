#!/bin/bash

# PrintFarm - Fix media conflicts and update script
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ media —Ñ–∞–π–ª–æ–≤ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ v3.1

set -e  # Exit on any error

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

# Check if we're in the right directory
if [ ! -f "docker-compose.yml" ] || [ ! -d "backend" ]; then
    error "–ù–µ –Ω–∞–π–¥–µ–Ω docker-compose.yml –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backend"
    error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ PrintFarm"
    exit 1
fi

log "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ media —Ñ–∞–π–ª–æ–≤..."

# Create backup of current media files before resolving conflicts
BACKUP_DATE=$(date +%Y%m%d_%H%M%S)
log "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Ç–µ–∫—É—â–∏—Ö media —Ñ–∞–π–ª–æ–≤..."

if [ -d "backend/media" ]; then
    tar -czf "media_conflict_backup_${BACKUP_DATE}.tar.gz" backend/media/
    log "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: media_conflict_backup_${BACKUP_DATE}.tar.gz"
fi

# Move conflicting files to a safe location
log "üöö –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤..."
mkdir -p "backup_media_conflicts_${BACKUP_DATE}"

# List of conflicting files from git error
CONFLICTING_FILES=(
    "backend/media/products/252-41411__WhatsApp_Image_2024-07-16_at_20.01.01.jpeg"
    "backend/media/products/283-41742_WhatsApp_Image_2025-07-18_at_11.12.40.jpeg"
    "backend/media/products/527-52721_WhatsApp_Image_2025-04-03_at_15.47.41.jpeg"
    "backend/media/products/527-52721_WhatsApp_Image_2025-04-03_at_15.48.16.jpeg"
    "backend/media/products/650-51736_WhatsApp_Image_2025-07-14_at_15.16.42.jpeg"
    "backend/media/products/654-52609_WhatsApp_Image_2025-07-14_at_15.41.40.jpeg"
    "backend/media/products/BATMAN161_–°–Ω–∏–º–æ–∫_—ç–∫—Ä–∞–Ω–∞_2023-11-11_173236.png"
    "backend/media/products/N422-11-161_WhatsApp_Image_2025-04-10_at_15.46.08.jpeg"
    "backend/media/products/scull-P_WhatsApp_Image_2023-11-11_at_14.22.29.jpeg"
    "backend/media/products/thumbnails/thumb_252-41411__WhatsApp_Image_2024-07-16_at_20.01.01.jpeg"
    "backend/media/products/thumbnails/thumb_283-41742_WhatsApp_Image_2025-07-18_at_11.12.40.jpeg"
    "backend/media/products/thumbnails/thumb_527-52721_WhatsApp_Image_2025-04-03_at_15.47.41.jpeg"
    "backend/media/products/thumbnails/thumb_527-52721_WhatsApp_Image_2025-04-03_at_15.48.16.jpeg"
    "backend/media/products/thumbnails/thumb_650-51736_WhatsApp_Image_2025-07-14_at_15.16.42.jpeg"
    "backend/media/products/thumbnails/thumb_654-52609_WhatsApp_Image_2025-07-14_at_15.41.40.jpeg"
    "backend/media/products/thumbnails/thumb_BATMAN161_–°–Ω–∏–º–æ–∫_—ç–∫—Ä–∞–Ω–∞_2023-11-11_173236.png"
    "backend/media/products/thumbnails/thumb_N422-11-161_WhatsApp_Image_2025-04-10_at_15.46.08.jpeg"
    "backend/media/products/thumbnails/thumb_scull-P_WhatsApp_Image_2023-11-11_at_14.22.29.jpeg"
)

# Move each conflicting file
for file in "${CONFLICTING_FILES[@]}"; do
    if [ -f "$file" ]; then
        # Create directory structure in backup
        backup_dir="backup_media_conflicts_${BACKUP_DATE}/$(dirname "$file")"
        mkdir -p "$backup_dir"
        
        # Move the file
        mv "$file" "$backup_dir/"
        log "‚úÖ –ü–µ—Ä–µ–º–µ—â–µ–Ω: $file"
    else
        info "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —É–¥–∞–ª–µ–Ω): $file"
    fi
done

# Now try to pull again
log "üì• –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞..."
git pull origin main

log "‚úÖ –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!"

# Show current status
log "üìã –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:"
git status

log "üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã:"
git log --oneline -5

info "üîß –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Ä–∞–∑—Ä–µ—à–µ–Ω—ã. –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å update-server.sh"

# Check if update script exists
if [ -f "update-server.sh" ]; then
    log "‚úÖ –°–∫—Ä–∏–ø—Ç update-server.sh –Ω–∞–π–¥–µ–Ω"
    chmod +x update-server.sh
    log "üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
    ./update-server.sh
else
    error "‚ùå –§–∞–π–ª update-server.sh –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
    info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: git checkout v3.1"
fi