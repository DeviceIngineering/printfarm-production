#!/usr/bin/env python
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–≤–∏–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–∞ 376-41401 –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤
"""
import os
import sys
import django
from datetime import datetime, timedelta

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from apps.sync.moysklad_client import MoySkladClient

def main():
    print("=== –ê–Ω–∞–ª–∏–∑ –¥–≤–∏–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–∞ 376-41401 ===\n")
    
    client = MoySkladClient()
    product_id = '03d80ab8-7a3d-11ef-0a80-040c003525fc'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–≤–∏–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞
    date_to = datetime.now()
    date_from = date_to - timedelta(days=90)
    
    print(f"–ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞: {date_from.strftime('%Y-%m-%d')} - {date_to.strftime('%Y-%m-%d')}")
    
    try:
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
        print("\n1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—á–µ—Ç –ø–æ –¥–≤–∏–∂–µ–Ω–∏—è–º —Ç–æ–≤–∞—Ä–∞...")
        
        # –ó–∞–ø—Ä–æ—Å –∫ API –æ—Ç—á–µ—Ç–∞ –ø–æ –¥–≤–∏–∂–µ–Ω–∏—è–º
        params = {
            'filter': f'product.id={product_id}',
            'momentFrom': date_from.strftime('%Y-%m-%d %H:%M:%S'),
            'momentTo': date_to.strftime('%Y-%m-%d %H:%M:%S'),
            'limit': 100
        }
        
        try:
            movements = client._make_request('GET', 'report/stock/byoperations', params=params)
            if movements.get('rows'):
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(movements['rows'])} –¥–≤–∏–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–∞:")
                for i, movement in enumerate(movements['rows'][:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                    print(f"  {i}. {movement.get('moment', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} - {movement.get('operation', {}).get('name', '–û–ø–µ—Ä–∞—Ü–∏—è')}")
            else:
                print("‚ùå –î–≤–∏–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏–π: {e}")
        
        print("\n2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—á–µ—Ç –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º –∏ –æ–±–æ—Ä–æ—Ç–∞–º...")
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å - –æ–±–æ—Ä–æ—Ç–Ω–æ-—Å–∞–ª—å–¥–æ–≤–∞—è –≤–µ–¥–æ–º–æ—Å—Ç—å
        warehouse_id = '241ed919-a631-11ee-0a80-07a9000bb947'  # –ê–¥—Ä–µ—Å–Ω—ã–π —Å–∫–ª–∞–¥
        params = {
            'filter': f'product.id={product_id};store.id={warehouse_id}',
            'momentFrom': date_from.strftime('%Y-%m-%d %H:%M:%S'),
            'momentTo': date_to.strftime('%Y-%m-%d %H:%M:%S'),
            'limit': 10
        }
        
        try:
            turnover = client._make_request('GET', 'report/turnover/bystore', params=params)
            if turnover.get('rows'):
                row = turnover['rows'][0]
                print(f"‚úÖ –û–±–æ—Ä–æ—Ç–Ω–æ-—Å–∞–ª—å–¥–æ–≤–∞—è –≤–µ–¥–æ–º–æ—Å—Ç—å:")
                print(f"  –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –Ω–∞—á–∞–ª–æ: {row.get('onPeriodStart', {}).get('quantity', 0)}")
                print(f"  –ü–æ—Å—Ç—É–ø–∏–ª–æ: {row.get('income', {}).get('quantity', 0)}")
                print(f"  –û—Ç–≥—Ä—É–∂–µ–Ω–æ: {row.get('outcome', {}).get('quantity', 0)}")
                print(f"  –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –∫–æ–Ω–µ—Ü: {row.get('onPeriodEnd', {}).get('quantity', 0)}")
            else:
                print("‚ùå –î–∞–Ω–Ω—ã–µ –ø–æ –æ–±–æ—Ä–æ—Ç–∞–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–æ—Ä–æ—Ç–æ–≤: {e}")
        
        print("\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å —ç—Ç–∏–º —Ç–æ–≤–∞—Ä–æ–º...")
        
        # –ò—â–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–∞–∫–ª–∞–¥–Ω—ã–µ
            params = {
                'filter': f'positions.assortment.id={product_id}',
                'order': 'moment,desc',
                'limit': 5
            }
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            doc_types = [
                ('demand', '–û—Ç–≥—Ä—É–∑–∫–∏'),
                ('supply', '–ü—Ä–∏—Ö–æ–¥—ã'),
                ('move', '–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏—è'),
                ('inventory', '–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏')
            ]
            
            for doc_type, doc_name in doc_types:
                try:
                    docs = client._make_request('GET', f'entity/{doc_type}', params=params)
                    if docs.get('rows'):
                        print(f"  üìã {doc_name}: –Ω–∞–π–¥–µ–Ω–æ {len(docs['rows'])} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
                        for doc in docs['rows'][:2]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2
                            print(f"    - {doc.get('moment', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}: {doc.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
                    else:
                        print(f"  üìã {doc_name}: –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                except Exception as e:
                    print(f"  üìã {doc_name}: –æ—à–∏–±–∫–∞ - {e}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {e}")
            
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    print("\n=== –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ ===")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –ú–æ–π–°–∫–ª–∞–¥ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ:")
    print("   - –û—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–∞ 376-41401 –Ω–∞ –≤—Å–µ—Ö —Å–∫–ª–∞–¥–∞—Ö")
    print("   - –ò—Å—Ç–æ—Ä–∏—é –¥–≤–∏–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–∞")
    print("   - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ —Ç–æ–≤–∞—Ä—É")
    print("\n2. –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏:")
    print("   - –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—é")
    print("   - –°–æ–∑–¥–∞–π—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ—Å—Ç–∞—Ç–∫–∏ > 0")
    print("\n3. –ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é")

if __name__ == '__main__':
    main()