"""
Management –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ webhooks –≤ SimplePrint

Usage:
    python manage.py register_webhooks              # –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å webhooks
    python manage.py register_webhooks --list       # –ü–æ–∫–∞–∑–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ
    python manage.py register_webhooks --test ID    # –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å webhook
"""

from django.core.management.base import BaseCommand
from apps.simpleprint.webhook_manager import SimplePrintWebhookManager


class Command(BaseCommand):
    help = '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å webhooks –≤ SimplePrint –¥–ª—è —Å–æ–±—ã—Ç–∏–π –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤'

    def add_arguments(self, parser):
        parser.add_argument(
            '--list',
            action='store_true',
            help='–ü–æ–∫–∞–∑–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ webhooks'
        )

        parser.add_argument(
            '--test',
            type=str,
            help='–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å webhook –ø–æ ID'
        )

        parser.add_argument(
            '--delete',
            type=str,
            help='–£–¥–∞–ª–∏—Ç—å webhook –ø–æ ID'
        )

        parser.add_argument(
            '--enable',
            type=str,
            help='–í–∫–ª—é—á–∏—Ç—å webhook –ø–æ ID'
        )

        parser.add_argument(
            '--disable',
            type=str,
            help=('–í—ã–∫–ª—é—á–∏—Ç—å webhook –ø–æ ID')
        )

    def handle(self, *args, **options):
        manager = SimplePrintWebhookManager()

        # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ webhooks
        if options['list']:
            self.stdout.write(self.style.SUCCESS('üìã –°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö webhooks:'))
            self.stdout.write('')

            webhooks = manager.list_webhooks()

            if not webhooks:
                self.stdout.write(self.style.WARNING('  Webhooks –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'))
                self.stdout.write('')
                self.stdout.write('  –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python manage.py register_webhooks')
                return

            for webhook in webhooks:
                self.stdout.write(f"  üîó ID: {webhook.get('id')}")
                self.stdout.write(f"     URL: {webhook.get('url')}")
                self.stdout.write(f"     Enabled: {'‚úÖ –î–∞' if webhook.get('enabled') else '‚ùå –ù–µ—Ç'}")
                self.stdout.write(f"     Events: {', '.join(webhook.get('events', []))}")
                if webhook.get('description'):
                    self.stdout.write(f"     Description: {webhook.get('description')}")
                self.stdout.write('')

            return

        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å webhook
        if options['test']:
            webhook_id = options['test']
            self.stdout.write(f'üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook {webhook_id}...')

            result = manager.test_webhook(webhook_id)

            if result.get('status'):
                self.stdout.write(self.style.SUCCESS('‚úÖ Webhook –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ'))
            else:
                self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞: {result.get("error")}'))

            return

        # –£–¥–∞–ª–∏—Ç—å webhook
        if options['delete']:
            webhook_id = options['delete']
            self.stdout.write(f'üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ webhook {webhook_id}...')

            result = manager.delete_webhook(webhook_id)

            if result.get('status'):
                self.stdout.write(self.style.SUCCESS('‚úÖ Webhook —É–¥–∞–ª–µ–Ω'))
            else:
                self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞: {result.get("error")}'))

            return

        # –í–∫–ª—é—á–∏—Ç—å webhook
        if options['enable']:
            webhook_id = options['enable']
            self.stdout.write(f'üîÑ –í–∫–ª—é—á–µ–Ω–∏–µ webhook {webhook_id}...')

            success = manager.enable_webhook(webhook_id, enabled=True)

            if success:
                self.stdout.write(self.style.SUCCESS('‚úÖ Webhook –≤–∫–ª—é—á–µ–Ω'))
            else:
                self.stdout.write(self.style.ERROR('‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è webhook'))

            return

        # –í—ã–∫–ª—é—á–∏—Ç—å webhook
        if options['disable']:
            webhook_id = options['disable']
            self.stdout.write(f'üîÑ –í—ã–∫–ª—é—á–µ–Ω–∏–µ webhook {webhook_id}...')

            success = manager.enable_webhook(webhook_id, enabled=False)

            if success:
                self.stdout.write(self.style.SUCCESS('‚úÖ Webhook –≤—ã–∫–ª—é—á–µ–Ω'))
            else:
                self.stdout.write(self.style.ERROR('‚ùå –û—à–∏–±–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏—è webhook'))

            return

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è webhooks (–¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ)
        self.stdout.write('')
        self.stdout.write(self.style.SUCCESS('üîó –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è webhooks –¥–ª—è –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤...'))
        self.stdout.write('')

        result = manager.register_printer_webhooks()

        if result['status'] == 'created':
            self.stdout.write(self.style.SUCCESS('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!'))
            self.stdout.write('')
            self.stdout.write(f"  URL: {result['url']}")
            self.stdout.write(f"  Events: {', '.join(result['events'])}")
            self.stdout.write('')
            self.stdout.write('üìù –¢–µ–ø–µ—Ä—å SimplePrint –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–±—ã—Ç–∏—è –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä')

        elif result['status'] == 'exists':
            self.stdout.write(self.style.WARNING('‚ö†Ô∏è  Webhook —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω'))
            self.stdout.write('')
            self.stdout.write(f"  URL: {result['url']}")
            self.stdout.write('')
            self.stdout.write('  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --list –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö webhooks')

        else:
            self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {result.get("error")}'))
            self.stdout.write('')
            self.stdout.write('  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:')
            self.stdout.write('  1. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å SimplePrint API')
            self.stdout.write('  2. –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å API —Ç–æ–∫–µ–Ω–∞')
            self.stdout.write('  3. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å webhook URL –∏–∑–≤–Ω–µ')
