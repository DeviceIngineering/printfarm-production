"""
Management –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è cooldown –º–µ—Ö–∞–Ω–∏–∑–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏

–ó–∞–ø—É—Å–∫: docker exec factory_v3_backend python manage.py test_sync_cooldown
"""

import time
import logging
from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from rest_framework.authtoken.models import Token
from rest_framework.test import APIClient
from apps.simpleprint.models import SimplePrintSync

logger = logging.getLogger(__name__)


class Command(BaseCommand):
    help = '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ cooldown –º–µ—Ö–∞–Ω–∏–∑–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ SimplePrint'

    def add_arguments(self, parser):
        parser.add_argument(
            '--token',
            type=str,
            default='0a8fee03bca2b530a15b1df44d38b304e3f57484',
            help='–¢–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é production —Ç–æ–∫–µ–Ω)'
        )

    def handle(self, *args, **options):
        token_key = options['token']

        self.stdout.write("\n" + "="*80)
        self.stdout.write(self.style.SUCCESS("üî¨ –¢–ï–°–¢ COOLDOWN –ú–ï–•–ê–ù–ò–ó–ú–ê SIMPLEPRINT"))
        self.stdout.write("="*80 + "\n")

        # ============================================================================
        # –®–ê–ì 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
        # ============================================================================
        self.stdout.write(self.style.WARNING("üìã –®–ê–ì 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –≤ –ë–î"))
        self.stdout.write("-" * 80)

        try:
            token = Token.objects.get(key=token_key)
            self.stdout.write(self.style.SUCCESS(f"‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω: {token_key[:20]}..."))
            self.stdout.write(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {token.user.username}")
            self.stdout.write(f"   Email: {token.user.email}")
            self.stdout.write(f"   –ê–∫—Ç–∏–≤–µ–Ω: {token.user.is_active}")
        except Token.DoesNotExist:
            self.stdout.write(self.style.ERROR(f"‚ùå –¢–æ–∫–µ–Ω –ù–ï –ù–ê–ô–î–ï–ù: {token_key[:20]}..."))
            self.stdout.write("\nüí° –°–æ–∑–¥–∞—é —Ç–æ–∫–µ–Ω...")

            # –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω
            user = User.objects.first()
            if not user:
                user = User.objects.create_user(
                    username='testadmin',
                    password='testpass123',
                    email='admin@printfarm.local'
                )
                self.stdout.write(f"   –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")

            token = Token.objects.create(user=user, key=token_key)
            self.stdout.write(self.style.SUCCESS(f"‚úÖ –¢–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω –¥–ª—è {user.username}"))

        self.stdout.write("")

        # ============================================================================
        # –®–ê–ì 2: –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–π –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
        # ============================================================================
        self.stdout.write(self.style.WARNING("üìã –®–ê–ì 2: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"))
        self.stdout.write("-" * 80)

        old_syncs = SimplePrintSync.objects.all().count()
        self.stdout.write(f"–ù–∞–π–¥–µ–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–π: {old_syncs}")
        self.stdout.write("‚ö†Ô∏è –ù–ï —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (–¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞)")
        self.stdout.write("")

        # ============================================================================
        # –®–ê–ì 3: API Client
        # ============================================================================
        client = APIClient()
        client.credentials(HTTP_AUTHORIZATION=f'Token {token_key}')
        url = '/api/v1/simpleprint/sync/trigger/'

        # ============================================================================
        # –¢–ï–°–¢ 1: –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –ë–ï–ó force (–¥–æ–ª–∂–µ–Ω –ª–∏–±–æ –ø—Ä–æ–π—Ç–∏, –ª–∏–±–æ –≤–µ—Ä–Ω—É—Ç—å 429)
        # ============================================================================
        self.stdout.write(self.style.WARNING("üìã –¢–ï–°–¢ 1: –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –ë–ï–ó force"))
        self.stdout.write("-" * 80)

        response1 = client.post(url, {'full_sync': False, 'force': False}, format='json')

        self.stdout.write(f"üì° POST {url}")
        self.stdout.write(f"üìù Body: {{'full_sync': False, 'force': False}}")
        self.stdout.write(f"üîê Token: Token {token_key[:20]}...")
        self.stdout.write(f"\nüìã –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response1.status_code}")
        self.stdout.write(f"üìù –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response1.data if hasattr(response1, 'data') else response1.content}")

        if response1.status_code == 429:
            self.stdout.write(self.style.WARNING("‚è±Ô∏è Cooldown –∞–∫—Ç–∏–≤–µ–Ω (–ø—Ä–æ—à–ª–æ < 5 –º–∏–Ω—É—Ç —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏)"))
            self.stdout.write("   –≠—Ç–æ –û–ñ–ò–î–ê–ï–ú–û–ï –ø–æ–≤–µ–¥–µ–Ω–∏–µ –µ—Å–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –±—ã–ª–∞ –Ω–µ–¥–∞–≤–Ω–æ")
        elif response1.status_code == 202:
            self.stdout.write(self.style.SUCCESS("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞"))
        elif response1.status_code == 401:
            self.stdout.write(self.style.ERROR("‚ùå –û–®–ò–ë–ö–ê: –ü–æ–ª—É—á–µ–Ω 401 (–ø—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–∫–µ–Ω–æ–º!)"))
        elif response1.status_code == 500:
            self.stdout.write(self.style.ERROR("‚ùå –û–®–ò–ë–ö–ê: 500 (–ø—Ä–æ–±–ª–µ–º–∞ —Å SimplePrint API –∏–ª–∏ Celery)"))
        else:
            self.stdout.write(self.style.ERROR(f"‚ùå –ù–ï–û–ñ–ò–î–ê–ù–ù–´–ô –°–¢–ê–¢–£–°: {response1.status_code}"))

        self.stdout.write("")

        # ============================================================================
        # –¢–ï–°–¢ 2: –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å —Å—Ä–∞–∑—É –ë–ï–ó force (–î–û–õ–ñ–ï–ù –≤–µ—Ä–Ω—É—Ç—å 429)
        # ============================================================================
        self.stdout.write(self.style.WARNING("üìã –¢–ï–°–¢ 2: –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å —Å—Ä–∞–∑—É –ë–ï–ó force (–æ–∂–∏–¥–∞–µ–º 429)"))
        self.stdout.write("-" * 80)

        time.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞

        response2 = client.post(url, {'full_sync': False, 'force': False}, format='json')

        self.stdout.write(f"üì° POST {url}")
        self.stdout.write(f"üìù Body: {{'full_sync': False, 'force': False}}")
        self.stdout.write(f"\nüìã –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response2.status_code}")
        self.stdout.write(f"üìù –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response2.data if hasattr(response2, 'data') else response2.content}")

        if response2.status_code == 429:
            self.stdout.write(self.style.SUCCESS("‚úÖ COOLDOWN –†–ê–ë–û–¢–ê–ï–¢: –ü–æ–ª—É—á–µ–Ω 429"))
            if hasattr(response2, 'data'):
                message = response2.data.get('message', '')
                self.stdout.write(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        elif response2.status_code == 401:
            self.stdout.write(self.style.ERROR("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ü–æ–ª—É—á–µ–Ω 401 –≤–º–µ—Å—Ç–æ 429!"))
            self.stdout.write("   –≠—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –ø—Ä–∏ cooldown")
        elif response2.status_code == 202:
            self.stdout.write(self.style.ERROR("‚ùå –û–®–ò–ë–ö–ê: Cooldown –ù–ï –†–ê–ë–û–¢–ê–ï–¢ (–ø–æ–ª—É—á–µ–Ω 202 –≤–º–µ—Å—Ç–æ 429)"))
        else:
            self.stdout.write(self.style.ERROR(f"‚ùå –ù–ï–û–ñ–ò–î–ê–ù–ù–´–ô –°–¢–ê–¢–£–°: {response2.status_code}"))

        self.stdout.write("")

        # ============================================================================
        # –¢–ï–°–¢ 3: –¢—Ä–µ—Ç–∏–π –∑–∞–ø—Ä–æ—Å –° force=True (–î–û–õ–ñ–ï–ù –ø—Ä–æ–π—Ç–∏ –¥–∞–∂–µ –ø—Ä–∏ cooldown)
        # ============================================================================
        self.stdout.write(self.style.WARNING("üìã –¢–ï–°–¢ 3: –¢—Ä–µ—Ç–∏–π –∑–∞–ø—Ä–æ—Å –° force=True (–æ–∂–∏–¥–∞–µ–º 202)"))
        self.stdout.write("-" * 80)

        time.sleep(1)

        response3 = client.post(url, {'full_sync': False, 'force': True}, format='json')

        self.stdout.write(f"üì° POST {url}")
        self.stdout.write(f"üìù Body: {{'full_sync': False, 'force': True}}")
        self.stdout.write(f"\nüìã –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response3.status_code}")
        self.stdout.write(f"üìù –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response3.data if hasattr(response3, 'data') else response3.content}")

        if response3.status_code == 202:
            self.stdout.write(self.style.SUCCESS("‚úÖ FORCE –†–ê–ë–û–¢–ê–ï–¢: –ü–æ–ª—É—á–µ–Ω 202 (—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞)"))
            if hasattr(response3, 'data'):
                task_id = response3.data.get('task_id', 'N/A')
                self.stdout.write(f"   Task ID: {task_id}")
        elif response3.status_code == 429:
            self.stdout.write(self.style.ERROR("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: Force –ù–ï –†–ê–ë–û–¢–ê–ï–¢ (–ø–æ–ª—É—á–µ–Ω 429)"))
            self.stdout.write("   –ü–∞—Ä–∞–º–µ—Ç—Ä force=True –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è!")
        elif response3.status_code == 401:
            self.stdout.write(self.style.ERROR("‚ùå –û–®–ò–ë–ö–ê: –ü–æ–ª—É—á–µ–Ω 401 (–ø—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–∫–µ–Ω–æ–º!)"))
        elif response3.status_code == 500:
            self.stdout.write(self.style.ERROR("‚ùå –û–®–ò–ë–ö–ê: 500 (–ø—Ä–æ–±–ª–µ–º–∞ —Å SimplePrint API –∏–ª–∏ Celery)"))
        else:
            self.stdout.write(self.style.ERROR(f"‚ùå –ù–ï–û–ñ–ò–î–ê–ù–ù–´–ô –°–¢–ê–¢–£–°: {response3.status_code}"))

        self.stdout.write("")

        # ============================================================================
        # –ò–¢–û–ì–ò
        # ============================================================================
        self.stdout.write(self.style.SUCCESS("\n" + "="*80))
        self.stdout.write(self.style.SUCCESS("üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø"))
        self.stdout.write(self.style.SUCCESS("="*80))

        self.stdout.write(f"\n–¢–µ—Å—Ç 1 (–ë–ï–ó force): {response1.status_code}")
        self.stdout.write(f"–¢–µ—Å—Ç 2 (–ë–ï–ó force, –ø–æ–≤—Ç–æ—Ä): {response2.status_code}")
        self.stdout.write(f"–¢–µ—Å—Ç 3 (–° force=True): {response3.status_code}")

        # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        self.stdout.write("\nüîç –ê–ù–ê–õ–ò–ó:")

        if response2.status_code == 401:
            self.stdout.write(self.style.ERROR("\n‚ùå –ü–†–û–ë–õ–ï–ú–ê –ù–ê–ô–î–ï–ù–ê: –ü—Ä–∏ cooldown –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 401 –≤–º–µ—Å—Ç–æ 429"))
            self.stdout.write("\n–í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:")
            self.stdout.write("1. –¢–æ–∫–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –≤ –ë–î")
            self.stdout.write("2. Middleware –∏–∑–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞")
            self.stdout.write("3. –ü—Ä–æ–±–ª–µ–º–∞ —Å CORS preflight")
            self.stdout.write("\n–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
            self.stdout.write("- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ Django (docker logs -f factory_v3_backend)")
            self.stdout.write("- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ settings.py")
            self.stdout.write("- –î–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ views.py:395-402")

        elif response2.status_code == 429 and response3.status_code != 202:
            self.stdout.write(self.style.ERROR("\n‚ùå –ü–†–û–ë–õ–ï–ú–ê: Force –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"))
            self.stdout.write("\n–í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:")
            self.stdout.write("1. Serializer –Ω–µ –ø–∞—Ä—Å–∏—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä force")
            self.stdout.write("2. –£—Å–ª–æ–≤–∏–µ `if not force:` —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
            self.stdout.write("\n–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
            self.stdout.write("- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å TriggerSyncSerializer –≤ serializers.py")
            self.stdout.write("- –î–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ views.py:389")

        elif response2.status_code == 429 and response3.status_code == 202:
            self.stdout.write(self.style.SUCCESS("\n‚úÖ –í–°–Å –†–ê–ë–û–¢–ê–ï–¢ –ö–û–†–†–ï–ö–¢–ù–û!"))
            self.stdout.write("\nCooldown —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ:")
            self.stdout.write("- –ë–ï–ó force –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 429")
            self.stdout.write("- –° force —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è")

        else:
            self.stdout.write(self.style.WARNING("\n‚ö†Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ–æ–¥–Ω–æ–∑–Ω–∞—á–Ω—ã"))
            self.stdout.write("–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")

        self.stdout.write("\n" + "="*80 + "\n")
