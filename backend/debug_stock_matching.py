#!/usr/bin/env python
"""
–û—Ç–ª–∞–¥–∫–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏ –æ—Å—Ç–∞—Ç–∫–æ–≤ –ø–æ ID
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from apps.sync.moysklad_client import MoySkladClient

def main():
    print("=== –û—Ç–ª–∞–¥–∫–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏ –æ—Å—Ç–∞—Ç–∫–æ–≤ ===\n")
    
    client = MoySkladClient()
    target_article = '320-42802'
    warehouse_id = '241ed919-a631-11ee-0a80-07a9000bb947'
    
    try:
        print("1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
        params = {'limit': 1000, 'archived': False}
        all_products_data = client._make_request('GET', 'entity/product', params=params)
        all_products = all_products_data.get('rows', [])
        
        # –ò—â–µ–º –Ω–∞—à —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤
        target_product = None
        for product in all_products:
            if product.get('article') == target_article:
                target_product = product
                break
        
        if target_product:
            print(f"‚úÖ –¢–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤:")
            print(f"  ID: {target_product.get('id')}")
            print(f"  –ê—Ä—Ç–∏–∫—É–ª: {target_product.get('article')}")
            print(f"  –ù–∞–∑–≤–∞–Ω–∏–µ: {target_product.get('name', '')[:50]}...")
        else:
            print(f"‚ùå –¢–æ–≤–∞—Ä {target_article} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤")
            return
        
        print("\n2. –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º...")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º
        store_href = f"{client.base_url}/entity/store/{warehouse_id}"
        stock_params = {
            'filter': f'store={store_href}',
            'limit': 1000,
            'includeZeroStocks': True
        }
        
        stock_data = client._make_request('GET', 'report/stock/all', params=stock_params)
        stock_rows = stock_data.get('rows', [])
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(stock_rows)} –∑–∞–ø–∏—Å–µ–π –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö")
        
        # –ò—â–µ–º –Ω–∞—à —Ç–æ–≤–∞—Ä –≤ –æ—Ç—á–µ—Ç–µ –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º
        target_stock = None
        for stock_row in stock_rows:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç–æ–≤–∞—Ä–∞ –∏–∑ href
            meta = stock_row.get('meta', {})
            href = meta.get('href', '')
            if href:
                product_id = href.split('/')[-1]
                if product_id == target_product['id']:
                    target_stock = stock_row
                    break
        
        if target_stock:
            print(f"‚úÖ –¢–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç—á–µ—Ç–µ –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º:")
            print(f"  ID –∏–∑ href: {target_stock.get('meta', {}).get('href', '').split('/')[-1]}")
            print(f"  –û—Å—Ç–∞—Ç–æ–∫: {target_stock.get('stock', 0)}")
        else:
            print(f"‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç—á–µ—Ç–µ –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º")
            print(f"–ò—â–µ–º —Ç–æ–≤–∞—Ä –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –≤ –æ—Ç—á–µ—Ç–µ...")
            
            # –ü–æ–∏—Å–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É
            for stock_row in stock_rows:
                if stock_row.get('article') == target_article:
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É:")
                    print(f"  ID –∏–∑ href: {stock_row.get('meta', {}).get('href', '').split('/')[-1]}")
                    print(f"  –û—Å—Ç–∞—Ç–æ–∫: {stock_row.get('stock', 0)}")
                    target_stock = stock_row
                    break
        
        print("\n3. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ ID:")
        product_id_from_list = target_product.get('id')
        stock_id_from_href = target_stock.get('meta', {}).get('href', '').split('/')[-1] if target_stock else None
        
        print(f"ID —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞: {product_id_from_list}")
        print(f"ID —Ç–æ–≤–∞—Ä–∞ –∏–∑ –æ—Å—Ç–∞—Ç–∫–æ–≤: {stock_id_from_href}")
        
        if product_id_from_list == stock_id_from_href:
            print("‚úÖ ID —Å–æ–≤–ø–∞–¥–∞—é—Ç")
        else:
            print("‚ùå ID –ù–ï —Å–æ–≤–ø–∞–¥–∞—é—Ç! –≠—Ç–æ –ø—Ä–∏—á–∏–Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã")
        
        print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –æ–±—ã—á–Ω—ã–π get_stock_report:")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π –º–µ—Ç–æ–¥ get_stock_report
        normal_stock = client.get_stock_report(warehouse_id, [])
        
        target_in_normal = None
        for item in normal_stock:
            if item.get('article') == target_article:
                target_in_normal = item
                break
        
        if target_in_normal:
            print(f"‚úÖ –¢–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ get_stock_report:")
            print(f"  –û—Å—Ç–∞—Ç–æ–∫: {target_in_normal.get('stock', 0)}")
        else:
            print("‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ get_stock_report")
        
        print("\n5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:")
        if normal_stock and any(item.get('article') == target_article for item in normal_stock):
            print("üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å get_stock_report –≤–º–µ—Å—Ç–æ get_all_products_with_stock")
            print("   –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()