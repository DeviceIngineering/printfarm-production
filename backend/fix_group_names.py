#!/usr/bin/env python
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π –≥—Ä—É–ø–ø –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from apps.sync.moysklad_client import MoySkladClient
from apps.products.models import Product

def main():
    print("=== –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π –≥—Ä—É–ø–ø ===\n")
    
    client = MoySkladClient()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≥—Ä—É–ø–ø—ã –∏–∑ –ú–æ–π–°–∫–ª–∞–¥
        print("1. –ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä—É–ø–ø—ã —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ú–æ–π–°–∫–ª–∞–¥...")
        groups = client.get_product_groups()
        groups_dict = {group['id']: group['name'] for group in groups}
        
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(groups_dict)} –≥—Ä—É–ø–ø")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å –ø—É—Å—Ç—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –≥—Ä—É–ø–ø
        print("\n2. –ò—â–µ–º —Ç–æ–≤–∞—Ä—ã —Å –ø—É—Å—Ç—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –≥—Ä—É–ø–ø...")
        products_to_fix = Product.objects.filter(
            product_group_name='',
            product_group_id__isnull=False
        ).exclude(product_group_id='')
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {products_to_fix.count()} —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø
        print("\n3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø...")
        fixed_count = 0
        
        for product in products_to_fix:
            group_name = groups_dict.get(product.product_group_id, '')
            if group_name:
                product.product_group_name = group_name
                product.save()
                fixed_count += 1
                print(f"‚úÖ {product.article}: {group_name}")
            else:
                print(f"‚ö†Ô∏è  {product.article}: –≥—Ä—É–ø–ø–∞ —Å ID {product.product_group_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixed_count} —Ç–æ–≤–∞—Ä–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...")
        podiums_count = Product.objects.filter(product_group_name__icontains='–ü–æ–¥–∏—É–º—ã').count()
        print(f"‚úÖ –¢–æ–≤–∞—Ä–æ–≤ –≥—Ä—É–ø–ø—ã '–ü–æ–¥–∏—É–º—ã': {podiums_count}")
        
        if podiums_count > 0:
            print("\n–¢–æ–≤–∞—Ä—ã –≥—Ä—É–ø–ø—ã '–ü–æ–¥–∏—É–º—ã':")
            for product in Product.objects.filter(product_group_name__icontains='–ü–æ–¥–∏—É–º—ã').order_by('article'):
                print(f"  üì¶ {product.article}: {product.name[:50]}... (–æ—Å—Ç–∞—Ç–æ–∫: {product.current_stock})")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()