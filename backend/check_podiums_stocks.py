#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ –≥—Ä—É–ø–ø—ã "–ü–æ–¥–∏—É–º—ã"
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from apps.sync.moysklad_client import MoySkladClient
from apps.products.models import Product

def main():
    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≥—Ä—É–ø–ø—ã '–ü–æ–¥–∏—É–º—ã' ===\n")
    
    client = MoySkladClient()
    
    try:
        print("1. –ü–æ–ª—É—á–∞–µ–º –≥—Ä—É–ø–ø—ã —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ú–æ–π–°–∫–ª–∞–¥...")
        groups = client.get_product_groups()
        
        # –ò—â–µ–º –≥—Ä—É–ø–ø—É "–ü–æ–¥–∏—É–º—ã"
        podiums_group = None
        for group in groups:
            if group['name'] == '–ü–æ–¥–∏—É–º—ã':
                podiums_group = group
                break
        
        if not podiums_group:
            print("‚ùå –ì—Ä—É–ø–ø–∞ '–ü–æ–¥–∏—É–º—ã' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ú–æ–π–°–∫–ª–∞–¥")
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã:")
            for group in groups[:10]:
                print(f"  - {group['name']} ({group['id']})")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –≥—Ä—É–ø–ø–∞ '–ü–æ–¥–∏—É–º—ã': {podiums_group['id']}")
        
        print("\n2. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –≥—Ä—É–ø–ø—ã '–ü–æ–¥–∏—É–º—ã' –∏–∑ –ú–æ–π–°–∫–ª–∞–¥...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å –æ—Å—Ç–∞—Ç–∫–∞–º–∏, –∏—Å–∫–ª—é—á–∏–≤ –≤—Å–µ –≥—Ä—É–ø–ø—ã –∫—Ä–æ–º–µ "–ü–æ–¥–∏—É–º—ã"
        all_groups = [g['id'] for g in groups]
        excluded_groups = [g['id'] for g in groups if g['id'] != podiums_group['id']]
        
        warehouse_id = '241ed919-a631-11ee-0a80-07a9000bb947'  # –ê–¥—Ä–µ—Å–Ω—ã–π —Å–∫–ª–∞–¥
        
        podiums_products = client.get_all_products_with_stock(warehouse_id, excluded_groups)
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(podiums_products)} —Ç–æ–≤–∞—Ä–æ–≤ –≤ –≥—Ä—É–ø–ø–µ '–ü–æ–¥–∏—É–º—ã' –Ω–∞ —Å–∫–ª–∞–¥–µ")
        
        print("\n3. –ê–Ω–∞–ª–∏–∑ –æ—Å—Ç–∞—Ç–∫–æ–≤ –≤ –ú–æ–π–°–∫–ª–∞–¥:")
        zero_stock_count = 0
        positive_stock_count = 0
        
        for product in podiums_products:
            stock = product.get('stock', 0)
            article = product.get('article', '–ë–µ–∑ –∞—Ä—Ç–∏–∫—É–ª–∞')
            name = product.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')[:50]
            
            if stock == 0:
                zero_stock_count += 1
                print(f"  üì¶ {article}: {name}... - –û–°–¢–ê–¢–û–ö: {stock}")
            else:
                positive_stock_count += 1
                print(f"  ‚úÖ {article}: {name}... - –û–°–¢–ê–¢–û–ö: {stock}")
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ú–æ–π–°–∫–ª–∞–¥:")
        print(f"  - –¢–æ–≤–∞—Ä–æ–≤ —Å –Ω—É–ª–µ–≤—ã–º–∏ –æ—Å—Ç–∞—Ç–∫–∞–º–∏: {zero_stock_count}")
        print(f"  - –¢–æ–≤–∞—Ä–æ–≤ —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ—Å—Ç–∞—Ç–∫–∞–º–∏: {positive_stock_count}")
        print(f"  - –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(podiums_products)}")
        
        print("\n4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –≥—Ä—É–ø–ø—ã "–ü–æ–¥–∏—É–º—ã" –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î
        local_podiums = Product.objects.filter(product_group_name__icontains='–ü–æ–¥–∏—É–º—ã')
        
        print(f"‚úÖ –í –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î –Ω–∞–π–¥–µ–Ω–æ {local_podiums.count()} —Ç–æ–≤–∞—Ä–æ–≤ –≥—Ä—É–ø–ø—ã '–ü–æ–¥–∏—É–º—ã'")
        
        if local_podiums.exists():
            print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î:")
            local_zero_stock = local_podiums.filter(current_stock=0).count()
            local_positive_stock = local_podiums.filter(current_stock__gt=0).count()
            
            print(f"  - –¢–æ–≤–∞—Ä–æ–≤ —Å –Ω—É–ª–µ–≤—ã–º–∏ –æ—Å—Ç–∞—Ç–∫–∞–º–∏: {local_zero_stock}")
            print(f"  - –¢–æ–≤–∞—Ä–æ–≤ —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ—Å—Ç–∞—Ç–∫–∞–º–∏: {local_positive_stock}")
            
            print("\nüìù –¢–æ–≤–∞—Ä—ã –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î:")
            for product in local_podiums.order_by('article'):
                print(f"  üì¶ {product.article}: {product.name[:50]}... - –û–°–¢–ê–¢–û–ö: {product.current_stock}")
        else:
            print("‚ùå –í –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≥—Ä—É–ø–ø—ã '–ü–æ–¥–∏—É–º—ã'")
        
        print("\n5. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:")
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª—ã –∏–∑ –ú–æ–π–°–∫–ª–∞–¥ –∏ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î
        moysklad_articles = {p.get('article') for p in podiums_products if p.get('article')}
        local_articles = set(local_podiums.values_list('article', flat=True))
        
        missing_in_local = moysklad_articles - local_articles
        extra_in_local = local_articles - moysklad_articles
        
        if missing_in_local:
            print(f"‚ùå –¢–æ–≤–∞—Ä—ã –∏–∑ –ú–æ–π–°–∫–ª–∞–¥, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î ({len(missing_in_local)}):")
            for article in sorted(missing_in_local):
                print(f"  - {article}")
        
        if extra_in_local:
            print(f"‚ö†Ô∏è  –¢–æ–≤–∞—Ä—ã –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –≤ –ú–æ–π–°–∫–ª–∞–¥ ({len(extra_in_local)}):")
            for article in sorted(extra_in_local):
                print(f"  - {article}")
        
        if not missing_in_local and not extra_in_local:
            print("‚úÖ –í—Å–µ —Ç–æ–≤–∞—Ä—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        
        print("\n=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–∞ 376-41401 ===")
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–∞ 376-41401
        target_article = '376-41401'
        
        # –í –ú–æ–π–°–∫–ª–∞–¥
        moysklad_target = None
        for product in podiums_products:
            if product.get('article') == target_article:
                moysklad_target = product
                break
        
        if moysklad_target:
            print(f"‚úÖ –¢–æ–≤–∞—Ä {target_article} –Ω–∞–π–¥–µ–Ω –≤ –ú–æ–π–°–∫–ª–∞–¥:")
            print(f"  - –ù–∞–∑–≤–∞–Ω–∏–µ: {moysklad_target.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"  - –û—Å—Ç–∞—Ç–æ–∫: {moysklad_target.get('stock', 0)}")
        else:
            print(f"‚ùå –¢–æ–≤–∞—Ä {target_article} –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –ú–æ–π–°–∫–ª–∞–¥ —Å—Ä–µ–¥–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≥—Ä—É–ø–ø—ã '–ü–æ–¥–∏—É–º—ã'")
        
        # –í –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î
        local_target = local_podiums.filter(article=target_article).first()
        
        if local_target:
            print(f"‚úÖ –¢–æ–≤–∞—Ä {target_article} –Ω–∞–π–¥–µ–Ω –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î:")
            print(f"  - –ù–∞–∑–≤–∞–Ω–∏–µ: {local_target.name}")
            print(f"  - –û—Å—Ç–∞—Ç–æ–∫: {local_target.current_stock}")
            print(f"  - –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {local_target.last_synced_at}")
        else:
            print(f"‚ùå –¢–æ–≤–∞—Ä {target_article} –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()