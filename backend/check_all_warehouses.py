#!/usr/bin/env python
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–∞ 320-42802 –Ω–∞ –≤—Å–µ—Ö —Å–∫–ª–∞–¥–∞—Ö
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from apps.sync.moysklad_client import MoySkladClient

def main():
    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–∞ 320-42802 –Ω–∞ –≤—Å–µ—Ö —Å–∫–ª–∞–¥–∞—Ö ===\n")
    
    client = MoySkladClient()
    target_article = '320-42802'
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–∫–ª–∞–¥—ã
        print("1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–∫–ª–∞–¥–æ–≤...")
        warehouses = client.get_warehouses()
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(warehouses)} —Å–∫–ª–∞–¥–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –Ω–∞ –∫–∞–∂–¥–æ–º —Å–∫–ª–∞–¥–µ
        print("\n2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –∫–∞–∂–¥–æ–º —Å–∫–ª–∞–¥–µ:")
        
        total_stock = 0
        found_warehouses = []
        
        for warehouse in warehouses:
            if warehouse.get('archived'):
                print(f"‚è∏Ô∏è  {warehouse['name']} - –∞—Ä—Ö–∏–≤–Ω—ã–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                continue
            
            print(f"\nüì¶ –°–∫–ª–∞–¥: {warehouse['name']} ({warehouse['id']})")
            
            try:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º (–º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–∏–µ –¥–∞–Ω–Ω—ã–µ)
                stock_data = client.get_stock_report(warehouse['id'], [])
                
                # –ò—â–µ–º —Ç–æ–≤–∞—Ä
                found = False
                for item in stock_data:
                    if item.get('article') == target_article:
                        found = True
                        stock = item.get('stock', 0)
                        print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω! –û—Å—Ç–∞—Ç–æ–∫: {stock} —à—Ç.")
                        if stock > 0:
                            total_stock += stock
                            found_warehouses.append({
                                'warehouse': warehouse['name'],
                                'stock': stock
                            })
                        break
                
                if not found:
                    print(f"  ‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç—á–µ—Ç–µ –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º")
                    
                    # –ü–æ–ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ get_all_products_with_stock
                    try:
                        groups = client.get_product_groups()
                        all_products = client.get_all_products_with_stock(warehouse['id'], [])
                        
                        for product in all_products:
                            if product.get('article') == target_article:
                                stock = product.get('stock', 0)
                                print(f"  üìã –ß–µ—Ä–µ–∑ get_all_products_with_stock: {stock} —à—Ç.")
                                if stock > 0:
                                    total_stock += stock
                                    found_warehouses.append({
                                        'warehouse': warehouse['name'],
                                        'stock': stock
                                    })
                                break
                    except Exception as e:
                        print(f"  ‚ö†Ô∏è  –û—à–∏–±–∫–∞ get_all_products_with_stock: {e}")
                        
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤: {e}")
        
        print(f"\n3. –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print(f"–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ —Ç–æ–≤–∞—Ä–∞ {target_article}: {total_stock} —à—Ç.")
        
        if found_warehouses:
            print("–°–∫–ª–∞–¥—ã —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ—Å—Ç–∞—Ç–∫–∞–º–∏:")
            for item in found_warehouses:
                print(f"  - {item['warehouse']}: {item['stock']} —à—Ç.")
        else:
            print("‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –Ω–∞ –æ–¥–Ω–æ–º —Å–∫–ª–∞–¥–µ —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º –æ—Å—Ç–∞—Ç–∫–æ–º")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ API
        print("\n4. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π API –∑–∞–ø—Ä–æ—Å...")
        
        try:
            # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫
            params = {
                'search': target_article,
                'limit': 10
            }
            
            product_data = client._make_request('GET', 'entity/product', params=params)
            products = product_data.get('rows', [])
            
            if products:
                for product in products:
                    if product.get('article') == target_article:
                        print(f"‚úÖ –¢–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ:")
                        print(f"  ID: {product.get('id')}")
                        print(f"  –ù–∞–∑–≤–∞–Ω–∏–µ: {product.get('name', '')[:50]}...")
                        
                        # –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
                        try:
                            product_id = product.get('id')
                            stock_params = {
                                'filter': f'product.id={product_id}',
                                'limit': 100
                            }
                            
                            stock_report = client._make_request('GET', 'report/stock/all', params=stock_params)
                            stock_rows = stock_report.get('rows', [])
                            
                            if stock_rows:
                                print("  –û—Å—Ç–∞—Ç–∫–∏ –ø–æ —Å–∫–ª–∞–¥–∞–º:")
                                for row in stock_rows:
                                    store_name = row.get('store', {}).get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–∫–ª–∞–¥')
                                    stock = row.get('stock', 0)
                                    print(f"    - {store_name}: {stock} —à—Ç.")
                            else:
                                print("  ‚ùå –û—Å—Ç–∞—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                                
                        except Exception as e:
                            print(f"  ‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ –ø–æ —Ç–æ–≤–∞—Ä—É: {e}")
                        
                        break
            else:
                print(f"‚ùå –¢–æ–≤–∞—Ä {target_article} –Ω–µ –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()