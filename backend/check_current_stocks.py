#!/usr/bin/env python
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ –≥—Ä—É–ø–ø—ã "–ü–æ–¥–∏—É–º—ã"
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from apps.sync.moysklad_client import MoySkladClient
from apps.products.models import Product

def main():
    print("=== –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ –≥—Ä—É–ø–ø—ã '–ü–æ–¥–∏—É–º—ã' ===\n")
    
    client = MoySkladClient()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –∏–∑ –ú–æ–π–°–∫–ª–∞–¥
        print("1. –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏ –∏–∑ –ú–æ–π–°–∫–ª–∞–¥...")
        warehouse_id = '241ed919-a631-11ee-0a80-07a9000bb947'
        groups = client.get_product_groups()
        podiums_group = next(g for g in groups if g['name'] == '–ü–æ–¥–∏—É–º—ã')
        excluded_groups = [g['id'] for g in groups if g['id'] != podiums_group['id']]
        
        products = client.get_all_products_with_stock(warehouse_id, excluded_groups)
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(products)} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ú–æ–π–°–∫–ª–∞–¥")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î
        print("\n2. –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î...")
        local_products = Product.objects.filter(product_group_name__icontains='–ü–æ–¥–∏—É–º—ã')
        local_dict = {p.article: p for p in local_products}
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {local_products.count()} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î")
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏
        print("\n3. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤:")
        print("–ê—Ä—Ç–∏–∫—É–ª\t\t–ú–æ–π–°–∫–ª–∞–¥\t–õ–æ–∫–∞–ª—å–Ω–∞—è –ë–î\t–†–∞–∑–Ω–æ—Å—Ç—å")
        print("-" * 60)
        
        discrepancies = []
        
        for product in products:
            article = product.get('article', '')
            moysklad_stock = product.get('stock', 0)
            name = product.get('name', '')[:30]
            
            local_product = local_dict.get(article)
            local_stock = float(local_product.current_stock) if local_product else 0
            
            difference = moysklad_stock - local_stock
            
            if difference != 0:
                discrepancies.append({
                    'article': article,
                    'name': name,
                    'moysklad': moysklad_stock,
                    'local': local_stock,
                    'diff': difference
                })
            
            print(f"{article:<12}\t{moysklad_stock:<8}\t{local_stock:<12}\t{difference:+.1f}")
        
        print("\n4. –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π:")
        if discrepancies:
            print(f"‚ùå –ù–∞–π–¥–µ–Ω–æ {len(discrepancies)} —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è–º–∏:")
            for item in discrepancies:
                print(f"  üì¶ {item['article']}: –ú–°={item['moysklad']}, –ë–î={item['local']} (—Ä–∞–∑–Ω–æ—Å—Ç—å: {item['diff']:+.1f})")
                print(f"     {item['name']}...")
        else:
            print("‚úÖ –í—Å–µ –æ—Å—Ç–∞—Ç–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä 320-42802 –æ—Ç–¥–µ–ª—å–Ω–æ
        print("\n5. –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–∞ 320-42802:")
        target_article = '320-42802'
        
        moysklad_product = next((p for p in products if p.get('article') == target_article), None)
        local_product = local_dict.get(target_article)
        
        if moysklad_product:
            print(f"‚úÖ –ú–æ–π–°–∫–ª–∞–¥: –æ—Å—Ç–∞—Ç–æ–∫ = {moysklad_product.get('stock', 0)} —à—Ç.")
        else:
            print("‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ú–æ–π–°–∫–ª–∞–¥")
        
        if local_product:
            print(f"‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è –ë–î: –æ—Å—Ç–∞—Ç–æ–∫ = {local_product.current_stock} —à—Ç.")
            print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {local_product.last_synced_at}")
        else:
            print("‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
        print("\n6. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:")
        from apps.sync.models import SyncLog
        last_sync = SyncLog.objects.order_by('-started_at').first()
        
        if last_sync:
            print(f"–î–∞—Ç–∞: {last_sync.started_at}")
            print(f"–°—Ç–∞—Ç—É—Å: {last_sync.status}")
            print(f"–°–∫–ª–∞–¥: {last_sync.warehouse_name}")
            print(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {last_sync.synced_products}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()