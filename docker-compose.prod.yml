version: '3.8'

services:
  db:
    image: postgres:15-alpine
    ports:
      - "5433:5432"  # Alternative port as 5432 is occupied
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-printfarm_db}
      - POSTGRES_USER=${POSTGRES_USER:-printfarm_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password}
    restart: always

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"  # Alternative port as default might be occupied
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: always

  backend:
    build:
      context: .
      dockerfile: docker/django/Dockerfile.prod
    ports:
      - "8001:8000"  # Alternative port as 8000 is occupied
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql://printfarm_user:secure_password@db:5432/printfarm_db
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - MOYSKLAD_TOKEN=f9be4985f5e3488716c040ca52b8e04c7c0f9e0b
      - MOYSKLAD_DEFAULT_WAREHOUSE=241ed919-a631-11ee-0a80-07a9000bb947
    restart: always

  celery:
    build:
      context: .
      dockerfile: docker/django/Dockerfile.prod
    command: celery -A config worker -l info
    depends_on:
      - db
      - redis
      - backend
    environment:
      - DATABASE_URL=postgresql://printfarm_user:secure_password@db:5432/printfarm_db
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=config.settings.production
    restart: always

  celery-beat:
    build:
      context: .
      dockerfile: docker/django/Dockerfile.prod
    command: celery -A config beat -l info
    depends_on:
      - db
      - redis
      - backend
    environment:
      - DATABASE_URL=postgresql://printfarm_user:secure_password@db:5432/printfarm_db
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=config.settings.production
    restart: always

  frontend:
    build:
      context: .
      dockerfile: docker/react/Dockerfile.prod
      args:
        - REACT_APP_API_URL=http://kemomail3.keenetic.pro:8001/api/v1
    ports:
      - "8090:80"  # Alternative port as 80 is occupied
    depends_on:
      - backend
    restart: always

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: