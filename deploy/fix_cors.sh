#!/bin/bash

# PrintFarm Production - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CORS –ø—Ä–æ–±–ª–µ–º
# –û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ —Å –≤–Ω–µ—à–Ω–∏—Ö IP –∞–¥—Ä–µ—Å–æ–≤

echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï CORS –ü–†–û–ë–õ–ï–ú PrintFarm Production"
echo "================================================"
echo ""

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ${NC} $1"
}

error() {
    echo -e "${RED}‚ùå${NC} $1"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è${NC} $1"
}

log "–ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CORS –ø—Ä–æ–±–ª–µ–º..."

# –®–∞–≥ 1: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
log "1/6 –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
docker-compose down
success "–°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –®–∞–≥ 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ git
log "2/6 –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥..."
git pull origin main
success "–ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω"

# –®–∞–≥ 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è server production –Ω–∞—Å—Ç—Ä–æ–µ–∫
log "3/6 –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
export DJANGO_SETTINGS_MODULE="config.settings.server_production"
echo "DJANGO_SETTINGS_MODULE=config.settings.server_production" > .env.server
success "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"

# –®–∞–≥ 4: –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "4/6 –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose build --no-cache backend
success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã"

# –®–∞–≥ 5: –ó–∞–ø—É—Å–∫ —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
log "5/6 –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏..."
DJANGO_SETTINGS_MODULE=config.settings.server_production docker-compose up -d --remove-orphans
sleep 10
success "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"

# –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
log "6/6 –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Backend API
if curl -f -s -H "Origin: http://example.com" http://localhost:8000/api/v1/settings/system-info/ >/dev/null 2>&1; then
    success "Backend API –¥–æ—Å—Ç—É–ø–µ–Ω —Å –≤–Ω–µ—à–Ω–∏—Ö IP"
else
    warning "Backend API –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ..."
    # –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    curl -v -H "Origin: http://example.com" http://localhost:8000/api/v1/settings/system-info/
fi

echo ""
echo "üéâ CORS –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo ""
echo "üîç –¢–ï–°–¢ –î–û–°–¢–£–ü–ù–û–°–¢–ò:"
echo "   1. –û—Ç–∫—Ä–æ–π—Ç–µ —Å–∞–π—Ç —Å –¥—Ä—É–≥–æ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞: http://kemomail3.keenetic.pro:3000/"
echo "   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø –∫ API: http://kemomail3.keenetic.pro:8000/api/v1/settings/system-info/"
echo ""
echo "üîß –ß–¢–û –ë–´–õ–û –°–î–ï–õ–ê–ù–û:"
echo "   ‚Ä¢ –í–∫–ª—é—á–µ–Ω CORS_ALLOW_ALL_ORIGINS=True"
echo "   ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω—ã CORS_ALLOWED_HEADERS –∏ CORS_ALLOWED_METHODS"
echo "   ‚Ä¢ –û—Ç–∫–ª—é—á–µ–Ω—ã —Å—Ç—Ä–æ–≥–∏–µ SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
echo "   ‚Ä¢ –†–∞–∑—Ä–µ—à–µ–Ω—ã –∑–∞–ø—Ä–æ—Å—ã —Å –ª—é–±—ã—Ö —Ö–æ—Å—Ç–æ–≤"
echo "   ‚Ä¢ –°–º—è–≥—á–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CSRF –∏ cookies"
echo ""
echo "üìù –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å:"
echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π—Ä–≤–æ–ª: sudo ufw status"
echo "   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs backend"
echo "   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./deploy/status.sh"
echo ""

# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
log "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ backend (–Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):"
sleep 3
docker-compose logs -f backend --tail=20