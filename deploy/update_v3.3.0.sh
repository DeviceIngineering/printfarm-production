#!/bin/bash

# PrintFarm Production v3.3.0 - –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
# –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–∏—Å—Ç–µ–º—É –¥–æ –≤–µ—Ä—Å–∏–∏ 3.3.0 —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ CORS –∏ –∏—Å—Ç–æ—Ä–∏–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–π

echo "üöÄ –û–ë–ù–û–í–õ–ï–ù–ò–ï PrintFarm Production –¥–æ v3.3.0"
echo "============================================="
echo ""

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ${NC} $1"
}

error() {
    echo -e "${RED}‚ùå${NC} $1"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è${NC} $1"
}

info() {
    echo -e "${PURPLE}‚ÑπÔ∏è${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ "$EUID" -eq 0 ]; then
    warning "–ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç root, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
fi

if [ ! -f "docker-compose.yml" ]; then
    error "–§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
fi

log "–ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ –≤–µ—Ä—Å–∏–∏ 3.3.0..."

# –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
CURRENT_VERSION=""
if [ -f "VERSION" ]; then
    CURRENT_VERSION=$(cat VERSION)
    info "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $CURRENT_VERSION"
fi

# –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
log "1/10 –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é..."
BACKUP_DIR="backups/update_$(date +'%Y%m%d_%H%M%S')"
mkdir -p $BACKUP_DIR

# –ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if docker-compose ps db | grep -q "Up"; then
    docker-compose exec -T db pg_dump -U printfarm_user printfarm_db > $BACKUP_DIR/database.sql
    success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: $BACKUP_DIR/database.sql"
else
    warning "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –±—ç–∫–∞–ø–∞"
fi

# –ë—ç–∫–∞–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
cp -r backend/config $BACKUP_DIR/
cp docker-compose.yml $BACKUP_DIR/
if [ -f ".env" ]; then
    cp .env $BACKUP_DIR/
fi
success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"

# –®–∞–≥ 2: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
log "2/10 –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
docker-compose down --remove-orphans
success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –®–∞–≥ 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
log "3/10 –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –∏–∑ GitHub..."
git fetch origin
git checkout main
git pull origin main

NEW_VERSION=$(cat VERSION)
if [ "$CURRENT_VERSION" != "$NEW_VERSION" ]; then
    success "–ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω —Å $CURRENT_VERSION –¥–æ $NEW_VERSION"
else
    warning "–í–µ—Ä—Å–∏—è –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å: $NEW_VERSION"
fi

# –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
log "4/10 –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..."

NEW_FILES_COUNT=0

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
if [ -f "backend/config/settings/server_production.py" ]; then
    success "‚úì server_production.py –Ω–∞–π–¥–µ–Ω"
    ((NEW_FILES_COUNT++))
fi

if [ -f "frontend/src/components/settings/SyncHistoryCard.tsx" ]; then
    success "‚úì SyncHistoryCard.tsx –Ω–∞–π–¥–µ–Ω"
    ((NEW_FILES_COUNT++))
fi

if [ -f "CORS-TROUBLESHOOTING.md" ]; then
    success "‚úì CORS-TROUBLESHOOTING.md –Ω–∞–π–¥–µ–Ω"
    ((NEW_FILES_COUNT++))
fi

info "–ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤: $NEW_FILES_COUNT"

# –®–∞–≥ 5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
log "5/10 –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f ".env" ]; then
    cat > .env << EOF
# PrintFarm Production v3.3.0 Environment
DJANGO_SETTINGS_MODULE=config.settings.server_production
DEBUG=False

# Database
POSTGRES_DB=printfarm_db
POSTGRES_USER=printfarm_user
POSTGRES_PASSWORD=secure_password

# Redis
REDIS_URL=redis://redis:6379/0
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# –ú–æ–π–°–∫–ª–∞–¥ (–∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è)
MOYSKLAD_TOKEN=your-token-here
MOYSKLAD_DEFAULT_WAREHOUSE=your-warehouse-id-here
EOF
    success "–°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ú–æ–π–°–∫–ª–∞–¥)"
else
    # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º .env
    if grep -q "DJANGO_SETTINGS_MODULE" .env; then
        sed -i 's/DJANGO_SETTINGS_MODULE=.*/DJANGO_SETTINGS_MODULE=config.settings.server_production/' .env
    else
        echo "DJANGO_SETTINGS_MODULE=config.settings.server_production" >> .env
    fi
    success "–û–±–Ω–æ–≤–ª–µ–Ω .env —Ñ–∞–π–ª"
fi

# –®–∞–≥ 6: –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "6/10 –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose build --no-cache
success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã"

# –®–∞–≥ 7: –ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
log "7/10 –ó–∞–ø—É—Å–∫–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
docker-compose up -d db redis
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
if docker-compose ps db | grep -q "Up"; then
    success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞"
else
    error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
    log "–ü—Ä–æ–±—É–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –±—ç–∫–∞–ø–∞..."
    docker-compose down
    docker volume rm $(docker volume ls -q | grep postgres) 2>/dev/null || true
    docker-compose up -d db
    sleep 15
    if [ -f "$BACKUP_DIR/database.sql" ]; then
        docker-compose exec -T db psql -U printfarm_user -d printfarm_db < $BACKUP_DIR/database.sql
        success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ –±—ç–∫–∞–ø–∞"
    fi
fi

# –®–∞–≥ 8: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
log "8/10 –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker-compose run --rm backend python manage.py migrate
docker-compose run --rm backend python manage.py collectstatic --noinput
success "–ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã, —Å—Ç–∞—Ç–∏–∫–∞ —Å–æ–±—Ä–∞–Ω–∞"

# –®–∞–≥ 9: –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
log "9/10 –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã..."
docker-compose up -d --remove-orphans
sleep 20

# –®–∞–≥ 10: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
log "10/10 –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã..."

echo ""
echo "üìä –°–û–°–¢–û–Ø–ù–ò–ï –ö–û–ù–¢–ï–ô–ù–ï–†–û–í:"
docker-compose ps

echo ""
echo "üîç –ü–†–û–í–ï–†–ö–ê –°–ï–†–í–ò–°–û–í:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Backend API
if curl -f -s http://localhost:8000/api/v1/settings/system-info/ >/dev/null 2>&1; then
    success "Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend
if curl -f -s http://localhost:3000/ >/dev/null 2>&1; then
    success "Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    warning "Frontend –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è (–ø–æ–¥–æ–∂–¥–∏—Ç–µ 1-2 –º–∏–Ω—É—Ç—ã)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if docker-compose exec -T db pg_isready -U printfarm_user >/dev/null 2>&1; then
    success "PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
if docker-compose exec -T redis redis-cli ping 2>/dev/null | grep -q PONG; then
    success "Redis —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    warning "Redis –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ CORS
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..."
if curl -f -s -H "Origin: http://example.com" http://localhost:8000/api/v1/settings/system-info/ >/dev/null 2>&1; then
    success "CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    warning "CORS –º–æ–∂–µ—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
fi

echo ""
echo "üéâ –û–ë–ù–û–í–õ–ï–ù–ò–ï –î–û v3.3.0 –ó–ê–í–ï–†–®–ï–ù–û!"
echo ""
echo "üåü –ù–û–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò v3.3.0:"
echo "   ‚ú® –ò—Å—Ç–æ—Ä–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–π –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö"
echo "   üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Ä–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å–ª–µ–¥—É—é—â–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"
echo "   üåê –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã CORS –ø—Ä–æ–±–ª–µ–º—ã –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö IP"
echo "   üìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–π"
echo "   üöÄ –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã"
echo ""
echo "üåê –î–û–°–¢–£–ü–ù–û–°–¢–¨:"
echo "   ‚Ä¢ –°–∞–π—Ç: http://kemomail3.keenetic.pro:3000/"
echo "   ‚Ä¢ API: http://kemomail3.keenetic.pro:8000/"
echo "   ‚Ä¢ Admin: http://kemomail3.keenetic.pro:8000/admin/"
echo ""
echo "üìÅ –†–ï–ó–ï–†–í–ù–ê–Ø –ö–û–ü–ò–Ø:"
echo "   –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: $BACKUP_DIR"
echo ""
echo "üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∞–π—Ç–∞ —Å —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤"
echo "   2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é"
echo "   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–π –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–Ω–µ—à–Ω–µ–≥–æ –∞–¥—Ä–µ—Å–∞
log "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞..."
if curl -f -s --connect-timeout 10 http://kemomail3.keenetic.pro:3000/ >/dev/null 2>&1; then
    success "–°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –≤–Ω–µ—à–Ω–µ–º—É –∞–¥—Ä–µ—Å—É!"
    success "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ ‚úÖ"
else
    warning "–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 2-3 –º–∏–Ω—É—Ç—ã"
fi

echo ""
echo "üí° –ü–û–ú–û–©–¨ –ò –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:"
echo "   ‚Ä¢ –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã: ./deploy/status.sh"
echo "   ‚Ä¢ CORS –ø—Ä–æ–±–ª–µ–º—ã: ./deploy/fix_cors.sh"
echo "   ‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: ./deploy/restore.sh $BACKUP_DIR/database.sql"
echo "   ‚Ä¢ –õ–æ–≥–∏: docker-compose logs -f"
echo ""

# –í —Å–ª—É—á–∞–µ –ø—Ä–æ–±–ª–µ–º –ø–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
if ! curl -f -s http://localhost:8000/api/v1/settings/system-info/ >/dev/null 2>&1; then
    echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã!"
    echo "   –í—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É:"
    echo "   1. docker-compose logs backend"
    echo "   2. ./deploy/status.sh"
    echo "   3. –ü—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö: ./deploy/restore.sh $BACKUP_DIR/database.sql"
fi