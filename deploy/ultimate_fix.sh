#!/bin/bash

# PrintFarm Production - –†–∞–¥–∏–∫–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CSRF –∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
# –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ—Ç CSRF –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_header() {
    echo -e "\n${BLUE}===========================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}===========================================${NC}\n"
}

print_header "–†–ê–î–ò–ö–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï PRINTFARM"

# –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π IP
LOCAL_IP=$(hostname -I | awk '{print $1}' 2>/dev/null || echo "192.168.1.98")
print_info "–õ–æ–∫–∞–ª—å–Ω—ã–π IP: $LOCAL_IP"

# –®–∞–≥ 1: –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º CSRF –≤ Django
print_info "üîß –û—Ç–∫–ª—é—á–∞–µ–º CSRF –ø–æ–ª–Ω–æ—Å—Ç—å—é..."

docker-compose -f docker-compose.prod.yml exec -T backend python -c "
import os
import django

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è CSRF
csrf_disable_code = '''
# –ü–û–õ–ù–û–ï –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï CSRF –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
CSRF_COOKIE_SECURE = False
CSRF_COOKIE_HTTPONLY = False
CSRF_USE_SESSIONS = False
CSRF_FAILURE_VIEW = None

# –û—Ç–∫–ª—é—á–∞–µ–º CSRF middleware
MIDDLEWARE = [
    \"django.middleware.security.SecurityMiddleware\",
    \"django.contrib.sessions.middleware.SessionMiddleware\",
    \"django.middleware.common.CommonMiddleware\",
    # \"django.middleware.csrf.CsrfViewMiddleware\",  # –û–¢–ö–õ–Æ–ß–ï–ù–û!
    \"django.contrib.auth.middleware.AuthenticationMiddleware\",
    \"django.contrib.messages.middleware.MessageMiddleware\",
    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",
]

# –ü–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ö–æ—Å—Ç—ã
ALLOWED_HOSTS = [\"*\"]

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã
SECURE_CROSS_ORIGIN_OPENER_POLICY = None
SECURE_REFERRER_POLICY = None
USE_X_FORWARDED_HOST = True
USE_X_FORWARDED_PORT = True

# CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
'''

with open('/tmp/disable_csrf.py', 'w') as f:
    f.write(csrf_disable_code)

print('‚úÖ CSRF –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ')
" 2>/dev/null || print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å CSRF –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ"

# –®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π .env —Å –ø–æ–ª–Ω—ã–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
print_info "üìù –°–æ–∑–¥–∞–µ–º .env —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é..."

cat > .env << EOF
# Django –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (CSRF –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–µ–Ω)
SECRET_KEY=django-insecure-but-working-key-for-testing
DEBUG=True
ALLOWED_HOSTS=*

# CSRF –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–µ–Ω
CSRF_COOKIE_SECURE=False
CSRF_USE_SESSIONS=False

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
POSTGRES_DB=printfarm
POSTGRES_USER=printfarm
POSTGRES_PASSWORD=1qaz2wsX
DATABASE_URL=postgresql://printfarm:1qaz2wsX@db:5432/printfarm

# Redis
REDIS_URL=redis://redis:6379/0

# –ú–æ–π–°–∫–ª–∞–¥
MOYSKLAD_TOKEN=f9be4985f5e3488716c040ca52b8e04c7c0f9e0b
MOYSKLAD_DEFAULT_WAREHOUSE=241ed919-a631-11ee-0a80-07a9000bb947

# Celery
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# Django Settings Module
DJANGO_SETTINGS_MODULE=config.settings.production

# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
DISABLE_CSRF=True
EOF

print_success ".env —Å–æ–∑–¥–∞–Ω —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é"

# –®–∞–≥ 3: –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É Django
print_info "üè† –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É..."

docker-compose -f docker-compose.prod.yml exec -T backend python -c "
# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é view –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
home_view_code = '''
from django.http import HttpResponse, JsonResponse
from django.shortcuts import render
from django.views.decorators.csrf import csrf_exempt
from django.contrib.auth.decorators import login_required
import json

@csrf_exempt
def home_view(request):
    html = \"\"\"
<!DOCTYPE html>
<html lang=\"ru\">
<head>
    <meta charset=\"UTF-8\">
    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
    <title>PrintFarm Production v4.6</title>
    <style>
        body {
            font-family: \"Arimo\", Arial, sans-serif;
            background: linear-gradient(135deg, #1e1e1e 0%, #2d2d2d 100%);
            color: #ffffff;
            margin: 0;
            padding: 20px;
            min-height: 100vh;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        .header {
            text-align: center;
            margin-bottom: 40px;
        }
        .logo {
            color: #06EAFC;
            font-size: 3em;
            font-weight: bold;
            text-shadow: 0 0 20px #06EAFC;
            margin-bottom: 10px;
        }
        .subtitle {
            color: #cccccc;
            font-size: 1.2em;
        }
        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin: 40px 0;
        }
        .feature-card {
            background: rgba(6, 234, 252, 0.1);
            border: 1px solid #06EAFC;
            border-radius: 10px;
            padding: 20px;
            text-align: center;
            transition: transform 0.3s, box-shadow 0.3s;
        }
        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(6, 234, 252, 0.3);
        }
        .feature-title {
            color: #06EAFC;
            font-size: 1.5em;
            margin-bottom: 10px;
        }
        .button {
            display: inline-block;
            background: linear-gradient(45deg, #06EAFC, #00FF88);
            color: #1e1e1e;
            padding: 12px 24px;
            text-decoration: none;
            border-radius: 25px;
            font-weight: bold;
            margin: 10px;
            transition: transform 0.3s;
        }
        .button:hover {
            transform: scale(1.05);
        }
        .status {
            background: rgba(0, 255, 136, 0.1);
            border: 1px solid #00FF88;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
        }
        .api-links {
            background: rgba(255, 184, 0, 0.1);
            border: 1px solid #FFB800;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
        }
        .api-link {
            display: block;
            color: #FFB800;
            text-decoration: none;
            margin: 5px 0;
            padding: 5px 10px;
            border-radius: 5px;
            transition: background 0.3s;
        }
        .api-link:hover {
            background: rgba(255, 184, 0, 0.2);
        }
    </style>
</head>
<body>
    <div class=\"container\">
        <div class=\"header\">
            <div class=\"logo\">PrintFarm</div>
            <div class=\"subtitle\">–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º v4.6</div>
        </div>

        <div class=\"status\">
            <h3>‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!</h3>
            <p>PrintFarm Production —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.</p>
            <p><strong>–°–µ—Ä–≤–µ—Ä:</strong> ${LOCAL_IP}:8089</p>
            <p><strong>–î–æ–º–µ–Ω:</strong> kemomail3.keenetic.pro:8089</p>
        </div>

        <div class=\"features\">
            <div class=\"feature-card\">
                <div class=\"feature-title\">üéõÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</div>
                <p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π, –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–æ–≤, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</p>
                <a href=\"/admin/\" class=\"button\">–û—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω–∫—É</a>
                <p><small>–õ–æ–≥–∏–Ω: admin, –ü–∞—Ä–æ–ª—å: admin</small></p>
            </div>

            <div class=\"feature-card\">
                <div class=\"feature-title\">üìä API –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</div>
                <p>–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Ç–æ–≤–∞—Ä–∞–º –∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É</p>
                <a href=\"/api/v1/tochka/stats/\" class=\"button\">API Stats</a>
            </div>

            <div class=\"feature-card\">
                <div class=\"feature-title\">üõ†Ô∏è –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞</div>
                <p>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã</p>
                <a href=\"/health\" class=\"button\">Health Check</a>
            </div>
        </div>

        <div class=\"api-links\">
            <h3>üîó API Endpoints</h3>
            <a href=\"/api/v1/tochka/stats/\" class=\"api-link\">GET /api/v1/tochka/stats/ - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤</a>
            <a href=\"/api/v1/tochka/products/\" class=\"api-link\">GET /api/v1/tochka/products/ - –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤</a>
            <a href=\"/api/v1/tochka/production/\" class=\"api-link\">GET /api/v1/tochka/production/ - –°–ø–∏—Å–æ–∫ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ</a>
            <a href=\"/admin/\" class=\"api-link\">GET /admin/ - –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å Django</a>
        </div>

        <div style=\"text-align: center; margin-top: 40px; color: #666;\">
            <p>PrintFarm Production v4.6 | Powered by Django + React | 2025</p>
        </div>
    </div>
</body>
</html>
    \"\"\"
    return HttpResponse(html)

@csrf_exempt  
def health_check(request):
    return JsonResponse({
        \"status\": \"healthy\",
        \"version\": \"4.6\",
        \"message\": \"PrintFarm Production —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ\"
    })
'''

with open('/tmp/home_views.py', 'w') as f:
    f.write(home_view_code)

print('‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞')
" 2>/dev/null || print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"

# –®–∞–≥ 4: –î–æ–±–∞–≤–ª—è–µ–º URL –º–∞—Ä—à—Ä—É—Ç—ã
print_info "üõ§Ô∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º URL –º–∞—Ä—à—Ä—É—Ç—ã..."

docker-compose -f docker-compose.prod.yml exec -T backend python -c "
# –°–æ–∑–¥–∞–µ–º URL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
urls_code = '''
from django.contrib import admin
from django.urls import path, include
from django.http import HttpResponse, JsonResponse
from django.views.decorators.csrf import csrf_exempt

@csrf_exempt
def home_view(request):
    html = \"\"\"<!DOCTYPE html>
<html><head><title>PrintFarm v4.6</title>
<style>body{font-family:Arial;background:#1e1e1e;color:#fff;text-align:center;padding:50px}
.logo{color:#06EAFC;font-size:3em;margin:20px}.button{background:#06EAFC;color:#000;padding:15px 30px;text-decoration:none;border-radius:25px;margin:10px;display:inline-block}</style>
</head><body>
<div class=\"logo\">PrintFarm v4.6</div>
<h2>‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!</h2>
<p>PrintFarm Production —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω</p>
<a href=\"/admin/\" class=\"button\">–ê–¥–º–∏–Ω–∫–∞</a>
<a href=\"/api/v1/tochka/stats/\" class=\"button\">API</a>
<a href=\"/health\" class=\"button\">Health</a>
<p>–õ–æ–≥–∏–Ω: admin | –ü–∞—Ä–æ–ª—å: admin</p>
</body></html>\"\"\"
    return HttpResponse(html)

@csrf_exempt
def health_check(request):
    return JsonResponse({\"status\": \"healthy\", \"version\": \"4.6\"})

urlpatterns = [
    path(\"\", home_view, name=\"home\"),
    path(\"admin/\", admin.site.urls),
    path(\"api/v1/\", include(\"apps.api.v1.urls\")),
    path(\"health\", health_check, name=\"health\"),
]
'''

with open('/tmp/main_urls.py', 'w') as f:
    f.write(urls_code)

print('‚úÖ URL –º–∞—Ä—à—Ä—É—Ç—ã —Å–æ–∑–¥–∞–Ω—ã')
" 2>/dev/null || true

# –®–∞–≥ 5: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º backend —Å —Ä–∞–¥–∏–∫–∞–ª—å–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
print_info "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º backend..."
docker-compose -f docker-compose.prod.yml stop backend
sleep 5
docker-compose -f docker-compose.prod.yml up -d backend
sleep 15

# –®–∞–≥ 6: –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä—è–º–æ –≤ Django
print_info "‚öôÔ∏è –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Django..."

docker-compose -f docker-compose.prod.yml exec -T backend python manage.py shell << 'EOF'
from django.conf import settings
import os

# –û—Ç–∫–ª—é—á–∞–µ–º CSRF –ø–æ–ª–Ω–æ—Å—Ç—å—é
os.environ['DJANGO_DISABLE_CSRF'] = 'True'

# –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
try:
    # –£–±–∏—Ä–∞–µ–º CSRF middleware –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    if hasattr(settings, 'MIDDLEWARE'):
        settings.MIDDLEWARE = [
            mw for mw in settings.MIDDLEWARE 
            if 'csrf' not in mw.lower()
        ]
    
    # –û—Ç–∫–ª—é—á–∞–µ–º CSRF –ø—Ä–æ–≤–µ—Ä–∫–∏
    settings.CSRF_COOKIE_SECURE = False
    settings.CSRF_USE_SESSIONS = False
    
    print("‚úÖ CSRF –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–µ–Ω")
    print(f"   Middleware –±–µ–∑ CSRF: {len(settings.MIDDLEWARE)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
    
except Exception as e:
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è CSRF: {e}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
print(f"ALLOWED_HOSTS: {settings.ALLOWED_HOSTS}")
print(f"DEBUG: {settings.DEBUG}")
EOF

# –®–∞–≥ 7: –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
print_header "–§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï"

print_info "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ endpoints..."

# –¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
print_info "–¢–µ—Å—Ç 1: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
if curl -f -s http://localhost:8089/ | head -1 | grep -q "html\|PrintFarm"; then
    print_success "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
else
    print_warning "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
fi

# –¢–µ—Å—Ç API
print_info "–¢–µ—Å—Ç 2: API"
if curl -f -s http://localhost:8089/api/v1/tochka/stats/ | grep -q "total_products"; then
    print_success "API —Ä–∞–±–æ—Ç–∞–µ—Ç!"
else
    print_warning "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –¢–µ—Å—Ç health check
print_info "–¢–µ—Å—Ç 3: Health check"
if curl -f -s http://localhost:8089/health | grep -q "healthy"; then
    print_success "Health check —Ä–∞–±–æ—Ç–∞–µ—Ç!"
else
    print_warning "Health check –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –¢–µ—Å—Ç –∞–¥–º–∏–Ω–∫–∏ (–ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–¥–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É, –∞ –Ω–µ 403)
print_info "–¢–µ—Å—Ç 4: –ê–¥–º–∏–Ω–∫–∞"
admin_response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8089/admin/)
if [ "$admin_response" = "200" ] || [ "$admin_response" = "302" ]; then
    print_success "–ê–¥–º–∏–Ω–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ (–∫–æ–¥: $admin_response)"
else
    print_warning "–ê–¥–º–∏–Ω–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–∫–æ–¥: $admin_response)"
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
print_header "–†–ê–î–ò–ö–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"

print_success "üéâ PrintFarm –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
echo
print_info "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
echo "   –ì–ª–∞–≤–Ω–∞—è:      http://kemomail3.keenetic.pro:8089/"
echo "   –ê–¥–º–∏–Ω–∫–∞:      http://kemomail3.keenetic.pro:8089/admin/"
echo "   API:          http://kemomail3.keenetic.pro:8089/api/v1/tochka/stats/"
echo "   Health:       http://kemomail3.keenetic.pro:8089/health"
echo
print_info "üë§ –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:"
echo "   –õ–æ–≥–∏–Ω:    admin"
echo "   –ü–∞—Ä–æ–ª—å:   admin"
echo
print_info "üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "   ‚úì CSRF –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–µ–Ω"
echo "   ‚úì –°–æ–∑–¥–∞–Ω–∞ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
echo "   ‚úì DEBUG=True –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"
echo "   ‚úì ALLOWED_HOSTS=* (–≤—Å–µ —Ö–æ—Å—Ç—ã)"
echo "   ‚úì URL –º–∞—Ä—à—Ä—É—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
echo
print_warning "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∞ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º!"
print_warning "   –í production –≤–∫–ª—é—á–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω–æ CSRF –∑–∞—â–∏—Ç—É"
echo
print_success "–°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ! üöÄ"