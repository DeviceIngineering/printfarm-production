#!/bin/bash

# PrintFarm Production - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã python –≤ entrypoint
# –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫—É "python: command not found"

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_header() {
    echo -e "\n${BLUE}===========================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}===========================================${NC}\n"
}

print_header "–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–ú–ê–ù–î–´ PYTHON"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
if [ -d "printfarm-production-new" ]; then
    cd printfarm-production-new
    print_info "–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ printfarm-production-new"
elif [ -d "backend" ]; then
    print_info "–£–∂–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
else
    print_error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    exit 1
fi

# –®–∞–≥ 1: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º entrypoint.sh
print_info "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º entrypoint.sh..."

cat > backend/entrypoint.sh << 'EOF'
#!/bin/bash
set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ PrintFarm Django..."

# –ñ–¥–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ PostgreSQL..."
while ! nc -z db 5432; do
  sleep 1
done
echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤!"

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üóÑÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
python3 manage.py migrate --noinput

# –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
python3 manage.py shell << EOF
from django.contrib.auth import get_user_model
User = get_user_model()
if not User.objects.filter(username='admin').exists():
    User.objects.create_superuser('admin', 'admin@printfarm.local', 'admin')
    print('‚úÖ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin/admin —Å–æ–∑–¥–∞–Ω')
else:
    print('‚ÑπÔ∏è –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
EOF

# –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏–∫—É
echo "üì¶ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
python3 manage.py collectstatic --noinput

echo "‚úÖ Django –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"

# –ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
exec "$@"
EOF

chmod +x backend/entrypoint.sh
print_success "entrypoint.sh –∏—Å–ø—Ä–∞–≤–ª–µ–Ω (python ‚Üí python3)"

# –®–∞–≥ 2: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º Dockerfile –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏–º–ª–∏–Ω–∫–∞ python
print_info "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º Dockerfile..."

cat > backend/Dockerfile << 'EOF'
FROM python:3.11-slim

WORKDIR /app

# –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
RUN apt-get update && apt-get install -y \
    postgresql-client \
    build-essential \
    libpq-dev \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# –°–æ–∑–¥–∞–µ–º —Å–∏–º–ª–∏–Ω–∫ python -> python3 –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
RUN ln -sf /usr/local/bin/python3 /usr/local/bin/python

# Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–¥
COPY . .

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
RUN mkdir -p /app/static /app/media

EXPOSE 8000

# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
CMD ["gunicorn", "config.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "2"]
EOF

print_success "Dockerfile –∏—Å–ø—Ä–∞–≤–ª–µ–Ω (–¥–æ–±–∞–≤–ª–µ–Ω —Å–∏–º–ª–∏–Ω–∫ python)"

# –®–∞–≥ 3: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º manage.py
print_info "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º manage.py..."

cat > backend/manage.py << 'EOF'
#!/usr/bin/env python3
import os
import sys

if __name__ == '__main__':
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
    try:
        from django.core.management import execute_from_command_line
    except ImportError as exc:
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed and "
            "available on your PYTHONPATH environment variable? Did you "
            "forget to activate a virtual environment?"
        ) from exc
    execute_from_command_line(sys.argv)
EOF

chmod +x backend/manage.py
print_success "manage.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω (python3)"

# –®–∞–≥ 4: –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
print_info "üîÑ –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
docker-compose down 2>/dev/null || true

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã
docker-compose build --no-cache backend 2>/dev/null || true

# –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–Ω–æ–≤–æ
print_info "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
print_info "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

# –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
print_header "–ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê"

print_info "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose ps

print_info "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ backend:"
docker-compose logs backend | tail -10

print_info "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoints:"

# –¢–µ—Å—Ç health check
if curl -f -s -m 10 http://localhost:8089/health/ > /dev/null 2>&1; then
    print_success "Health check —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    curl -s http://localhost:8089/health/ | head -3
else
    print_warning "Health check –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    print_info "–õ–æ–≥–∏ backend:"
    docker-compose logs backend | tail -5
fi

# –¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
echo
if curl -f -s -m 10 http://localhost:8089/ | grep -q -i "printfarm"; then
    print_success "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
else
    print_warning "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
fi

# –®–∞–≥ 6: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —É–ø—Ä–∞–≤–ª—è—é—â–∏–µ —Å–∫—Ä–∏–ø—Ç—ã
print_info "üìù –°–æ–∑–¥–∞–µ–º —É–ø—Ä–∞–≤–ª—è—é—â–∏–µ —Å–∫—Ä–∏–ø—Ç—ã..."

# –°–∫—Ä–∏–ø—Ç —Å—Ç–∞—Ç—É—Å–∞
cat > status.sh << 'EOF'
#!/bin/bash
echo "=== –°–¢–ê–¢–£–° PRINTFARM ==="
echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
docker-compose ps
echo -e "\n–ü–æ—Ä—Ç—ã:"
netstat -tlnp | grep :8089 || echo "–ü–æ—Ä—Ç 8089 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"
echo -e "\n–¢–µ—Å—Ç API:"
curl -s http://localhost:8089/health/ | head -3 || echo "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
echo -e "\n–¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π:"
curl -s http://localhost:8089/ | head -1 | grep -o "<title>.*</title>" || echo "–ì–ª–∞–≤–Ω–∞—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
EOF

# –°–∫—Ä–∏–ø—Ç –ª–æ–≥–æ–≤
cat > logs.sh << 'EOF'
#!/bin/bash
echo "=== –õ–û–ì–ò PRINTFARM ==="
if [ "$1" ]; then
    echo "–õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞: $1"
    docker-compose logs -f --tail=50 $1
else
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã: backend, nginx, db, redis"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./logs.sh [—Å–µ—Ä–≤–∏—Å]"
    echo "–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â–∏–µ –ª–æ–≥–∏:"
    docker-compose logs --tail=20
fi
EOF

# –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
cat > restart.sh << 'EOF'
#!/bin/bash
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ PrintFarm..."
docker-compose restart
sleep 15
echo "‚úÖ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω"
./status.sh
EOF

chmod +x *.sh

print_success "–£–ø—Ä–∞–≤–ª—è—é—â–∏–µ —Å–∫—Ä–∏–ø—Ç—ã —Å–æ–∑–¥–∞–Ω—ã"

# –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
print_header "–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"

print_success "üéâ –ö–æ–º–∞–Ω–¥–∞ python –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!"
echo
print_info "üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å:"
echo "   –ì–ª–∞–≤–Ω–∞—è:      http://kemomail3.keenetic.pro:8089/"
echo "   Health:       http://kemomail3.keenetic.pro:8089/health/"
echo "   –ê–¥–º–∏–Ω–∫–∞:      http://kemomail3.keenetic.pro:8089/admin/"
echo
print_info "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   –°—Ç–∞—Ç—É—Å:       ./status.sh"
echo "   –õ–æ–≥–∏:         ./logs.sh [backend|nginx|db|redis]"
echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:   ./restart.sh"
echo
print_info "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "   ‚úì python ‚Üí python3 –≤ entrypoint.sh"
echo "   ‚úì –î–æ–±–∞–≤–ª–µ–Ω —Å–∏–º–ª–∏–Ω–∫ python –≤ Dockerfile"
echo "   ‚úì –ò—Å–ø—Ä–∞–≤–ª–µ–Ω shebang –≤ manage.py"
echo "   ‚úì –ü–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã Docker –æ–±—Ä–∞–∑—ã"
echo "   ‚úì –û–±–Ω–æ–≤–ª–µ–Ω—ã —É–ø—Ä–∞–≤–ª—è—é—â–∏–µ —Å–∫—Ä–∏–ø—Ç—ã"
echo
if curl -f -s -m 5 http://localhost:8089/health/ > /dev/null 2>&1; then
    print_success "‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ!"
else
    print_warning "‚ö†Ô∏è  –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ: ./logs.sh backend"
fi
echo
print_success "–ì–æ—Ç–æ–≤–æ! üöÄ"