#!/bin/bash

# PrintFarm Production - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ 400
# –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_header() {
    echo -e "\n${BLUE}===========================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}===========================================${NC}\n"
}

print_header "–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–®–ò–ë–ö–ò 400"

# –®–∞–≥ 1: –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å curl
print_info "üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤..."

echo "=== –¢–ï–°–¢ 1: –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å ==="
curl -v http://localhost:8089/api/v1/tochka/stats/ 2>&1 | head -20

echo -e "\n=== –¢–ï–°–¢ 2: –ó–∞–ø—Ä–æ—Å —Å Host –∑–∞–≥–æ–ª–æ–≤–∫–æ–º ==="
curl -v -H "Host: kemomail3.keenetic.pro:8089" http://localhost:8089/api/v1/tochka/stats/ 2>&1 | head -20

echo -e "\n=== –¢–ï–°–¢ 3: –ü—Ä–æ—Å—Ç–æ–π health check ==="
curl -v http://localhost:8089/health 2>&1 | head -20

# –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
print_info "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
echo "=== NGINX CONFIG ==="
cat nginx.conf | head -30

# –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º Django –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
print_info "‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º Django –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..."
docker-compose -f docker-compose.prod.yml exec -T backend python manage.py shell << 'EOF'
from django.conf import settings
import os

print("=== DJANGO SETTINGS ===")
print(f"ALLOWED_HOSTS: {settings.ALLOWED_HOSTS}")
print(f"DEBUG: {settings.DEBUG}")
print(f"SECRET_KEY exists: {bool(settings.SECRET_KEY)}")

print("\n=== ENVIRONMENT VARIABLES ===")
print(f"ALLOWED_HOSTS env: {os.environ.get('ALLOWED_HOSTS', 'NOT SET')}")
print(f"DEBUG env: {os.environ.get('DEBUG', 'NOT SET')}")

print("\n=== TESTING HOST VALIDATION ===")
from django.core.exceptions import DisallowedHost
from django.http import HttpRequest

test_hosts = [
    'localhost:8089',
    'kemomail3.keenetic.pro:8089',
    'kemomail3.keenetic.pro',
    '127.0.0.1:8089'
]

for host in test_hosts:
    try:
        from django.core.handlers.wsgi import WSGIHandler
        request = HttpRequest()
        request.META['HTTP_HOST'] = host
        print(f"‚úÖ Host '{host}' - VALID")
    except DisallowedHost as e:
        print(f"‚ùå Host '{host}' - REJECTED: {e}")
    except Exception as e:
        print(f"‚ö†Ô∏è  Host '{host}' - ERROR: {e}")
EOF

# –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ Django
print_info "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ Django..."
echo "=== BACKEND LOGS ==="
docker-compose -f docker-compose.prod.yml logs --tail=20 backend

echo -e "\n=== NGINX LOGS ==="
docker-compose -f docker-compose.prod.yml logs --tail=10 nginx

# –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
print_info "üîå –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è..."
echo "=== LISTENING PORTS ==="
docker-compose -f docker-compose.prod.yml exec backend netstat -tlnp 2>/dev/null || echo "netstat –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω"

echo -e "\n=== DOCKER NETWORK ==="
docker-compose -f docker-compose.prod.yml exec backend nslookup backend 2>/dev/null || echo "nslookup –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω"

# –®–∞–≥ 6: –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ö–æ—Å—Ç–æ–≤
print_header "–°–û–ó–î–ê–ù–ò–ï –í–†–ï–ú–ï–ù–ù–û–ì–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø"

print_warning "–°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ö–æ—Å—Ç–æ–≤..."

# –°–æ–∑–¥–∞–µ–º –ø–∞—Ç—á –¥–ª—è settings
cat > django_settings_patch.py << 'EOF'
# –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ç—á –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ö–æ—Å—Ç–æ–≤
print("üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ç—á Django settings...")

# –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ö–æ—Å—Ç–æ–≤
ALLOWED_HOSTS = ['*']

# –û—Ç–∫–ª—é—á–∞–µ–º CSRF –¥–ª—è API (–≤—Ä–µ–º–µ–Ω–Ω–æ)
CSRF_TRUSTED_ORIGINS = ['*']

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
USE_X_FORWARDED_HOST = True
USE_X_FORWARDED_PORT = True

# CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGIN_REGEXES = [r".*"]

print("‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ç—á –ø—Ä–∏–º–µ–Ω–µ–Ω")
EOF

# –ö–æ–ø–∏—Ä—É–µ–º –ø–∞—Ç—á –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º
print_info "üì¶ –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–∞—Ç—á –∫ Django..."
docker cp django_settings_patch.py $(docker-compose -f docker-compose.prod.yml ps -q backend):/app/

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º backend —Å –ø–∞—Ç—á–µ–º
docker-compose -f docker-compose.prod.yml exec -T backend python manage.py shell << 'EOF'
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ç—á –≤ settings
try:
    patch_file = '/app/django_settings_patch.py'
    if os.path.exists(patch_file):
        exec(open(patch_file).read())
        print("‚úÖ –ü–∞—Ç—á —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω")
    else:
        print("‚ùå –§–∞–π–ª –ø–∞—Ç—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ç—á–∞: {e}")
EOF

# –®–∞–≥ 7: –°–æ–∑–¥–∞–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π .env —Ñ–∞–π–ª
print_info "üîß –°–æ–∑–¥–∞–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π .env —Ñ–∞–π–ª..."
cat > .env << 'EOF'
# Django –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ)
SECRET_KEY=django-insecure-but-working-key-for-testing
DEBUG=True
ALLOWED_HOSTS=*

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
POSTGRES_DB=printfarm
POSTGRES_USER=printfarm  
POSTGRES_PASSWORD=1qaz2wsX
DATABASE_URL=postgresql://printfarm:1qaz2wsX@db:5432/printfarm

# Redis
REDIS_URL=redis://redis:6379/0

# –ú–æ–π–°–∫–ª–∞–¥
MOYSKLAD_TOKEN=f9be4985f5e3488716c040ca52b8e04c7c0f9e0b
MOYSKLAD_DEFAULT_WAREHOUSE=241ed919-a631-11ee-0a80-07a9000bb947

# Celery
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# Django Settings Module
DJANGO_SETTINGS_MODULE=config.settings.production
EOF

print_success ".env —Ñ–∞–π–ª —É–ø—Ä–æ—â–µ–Ω"

# –®–∞–≥ 8: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º backend
print_info "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º backend —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏..."
docker-compose -f docker-compose.prod.yml restart backend

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
sleep 15

# –®–∞–≥ 9: –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
print_header "–§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï"

print_info "üß™ –¢–µ—Å—Ç –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π..."

echo "=== –¢–ï–°–¢ 1: –ü—Ä–æ—Å—Ç–æ–π API –∑–∞–ø—Ä–æ—Å ==="
if curl -f -s http://localhost:8089/api/v1/tochka/stats/ 2>/dev/null; then
    print_success "API —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    curl -s http://localhost:8089/api/v1/tochka/stats/ | python3 -m json.tool 2>/dev/null | head -5
else
    print_error "API –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç:"
    curl -v http://localhost:8089/api/v1/tochka/stats/ 2>&1 | tail -10
fi

echo -e "\n=== –¢–ï–°–¢ 2: Health check ==="
if curl -f -s http://localhost:8089/health 2>/dev/null; then
    print_success "Health check —Ä–∞–±–æ—Ç–∞–µ—Ç!"
else
    print_error "Health check –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo -e "\n=== –¢–ï–°–¢ 3: –° –≤–Ω–µ—à–Ω–∏–º Host ==="
if curl -f -s -H "Host: kemomail3.keenetic.pro:8089" http://localhost:8089/api/v1/tochka/stats/ 2>/dev/null; then
    print_success "–í–Ω–µ—à–Ω–∏–π Host —Ä–∞–±–æ—Ç–∞–µ—Ç!"
else
    print_warning "–í–Ω–µ—à–Ω–∏–π Host –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

# –®–∞–≥ 10: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
print_header "–†–ï–ó–£–õ–¨–¢–ê–¢–´ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò"

print_info "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose -f docker-compose.prod.yml ps

print_info "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è:"
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f docker-compose.prod.yml logs backend | tail -50"
echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Django settings: docker-compose -f docker-compose.prod.yml exec backend python manage.py diffsettings"
echo "3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ backend: curl http://localhost:8000/ (–µ—Å–ª–∏ –ø–æ—Ä—Ç –æ—Ç–∫—Ä—ã—Ç)"
echo "4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Å–µ: docker-compose -f docker-compose.prod.yml restart"

print_warning "‚ö†Ô∏è  –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç DEBUG=True –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"
print_success "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üîç"

# –û—á–∏—Å—Ç–∫–∞
rm -f django_settings_patch.py