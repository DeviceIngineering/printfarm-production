#!/bin/bash

# PrintFarm Production - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CSRF –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∫–µ
# –£—Å—Ç—Ä–∞–Ω—è–µ—Ç –æ—à–∏–±–∫—É "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ CSRF. –ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω—ë–Ω."

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_header() {
    echo -e "\n${BLUE}===========================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}===========================================${NC}\n"
}

print_header "–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï CSRF –î–õ–Ø –ê–î–ú–ò–ù–ö–ò"

# –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π IP –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
LOCAL_IP=$(hostname -I | awk '{print $1}' 2>/dev/null || echo "192.168.1.98")
print_info "–û–±–Ω–∞—Ä—É–∂–µ–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π IP: $LOCAL_IP"

# –®–∞–≥ 1: –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π .env —Ñ–∞–π–ª
print_info "üîß –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π .env —Ñ–∞–π–ª..."

# –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è
cp .env .env.backup.csrf.$(date +%Y%m%d_%H%M%S) 2>/dev/null || true

cat > .env << EOF
# Django –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º CSRF)
SECRET_KEY=django-insecure-but-working-key-for-testing
DEBUG=True
ALLOWED_HOSTS=*

# CSRF –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
CSRF_TRUSTED_ORIGINS=http://kemomail3.keenetic.pro:8089,http://${LOCAL_IP}:8089,http://localhost:8089,https://kemomail3.keenetic.pro:8089

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
POSTGRES_DB=printfarm
POSTGRES_USER=printfarm
POSTGRES_PASSWORD=1qaz2wsX
DATABASE_URL=postgresql://printfarm:1qaz2wsX@db:5432/printfarm

# Redis
REDIS_URL=redis://redis:6379/0

# –ú–æ–π–°–∫–ª–∞–¥
MOYSKLAD_TOKEN=f9be4985f5e3488716c040ca52b8e04c7c0f9e0b
MOYSKLAD_DEFAULT_WAREHOUSE=241ed919-a631-11ee-0a80-07a9000bb947

# Celery
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# Django Settings Module
DJANGO_SETTINGS_MODULE=config.settings.production

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ CSRF –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
CSRF_COOKIE_SECURE=False
CSRF_COOKIE_HTTPONLY=False
CSRF_USE_SESSIONS=True
CSRF_COOKIE_SAMESITE=Lax
EOF

print_success ".env —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω —Å CSRF –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"

# –®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º –ø–∞—Ç—á –¥–ª—è Django settings –ø—Ä—è–º–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
print_info "‚öôÔ∏è –ü—Ä–∏–º–µ–Ω—è–µ–º CSRF –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ Django..."

docker-compose -f docker-compose.prod.yml exec -T backend python -c "
import os
import django
from django.conf import settings

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['CSRF_TRUSTED_ORIGINS'] = 'http://kemomail3.keenetic.pro:8089,http://${LOCAL_IP}:8089,http://localhost:8089,https://kemomail3.keenetic.pro:8089'
os.environ['CSRF_COOKIE_SECURE'] = 'False'
os.environ['CSRF_COOKIE_HTTPONLY'] = 'False' 
os.environ['CSRF_USE_SESSIONS'] = 'True'
os.environ['CSRF_COOKIE_SAMESITE'] = 'Lax'

print('‚úÖ CSRF –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
csrf_settings = '''
# CSRF –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
CSRF_TRUSTED_ORIGINS = [
    \"http://kemomail3.keenetic.pro:8089\",
    \"http://${LOCAL_IP}:8089\", 
    \"http://localhost:8089\",
    \"https://kemomail3.keenetic.pro:8089\",
]

CSRF_COOKIE_SECURE = False
CSRF_COOKIE_HTTPONLY = False
CSRF_USE_SESSIONS = True
CSRF_COOKIE_SAMESITE = \"Lax\"
CSRF_FAILURE_VIEW = \"django.views.csrf.csrf_failure\"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
SECURE_CROSS_ORIGIN_OPENER_POLICY = None
SECURE_REFERRER_POLICY = None

print(\"‚úÖ CSRF –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django –ø—Ä–∏–º–µ–Ω–µ–Ω—ã\")
'''

with open('/tmp/csrf_settings.py', 'w') as f:
    f.write(csrf_settings)

print('‚úÖ –§–∞–π–ª CSRF –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–æ–∑–¥–∞–Ω')
" 2>/dev/null || print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–µ—Ä–µ–∑ Python"

# –®–∞–≥ 3: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º backend —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
print_info "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º backend..."
docker-compose -f docker-compose.prod.yml restart backend

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
print_info "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ backend (15 —Å–µ–∫—É–Ω–¥)..."
sleep 15

# –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º Django –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
print_info "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Django CSRF –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..."
docker-compose -f docker-compose.prod.yml exec -T backend python manage.py shell << 'EOF'
from django.conf import settings
import os

print("=== CSRF –ù–ê–°–¢–†–û–ô–ö–ò ===")
print(f"CSRF_TRUSTED_ORIGINS: {getattr(settings, 'CSRF_TRUSTED_ORIGINS', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')}")
print(f"CSRF_COOKIE_SECURE: {getattr(settings, 'CSRF_COOKIE_SECURE', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')}")
print(f"CSRF_USE_SESSIONS: {getattr(settings, 'CSRF_USE_SESSIONS', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')}")
print(f"ALLOWED_HOSTS: {settings.ALLOWED_HOSTS}")
print(f"DEBUG: {settings.DEBUG}")

print("\n=== –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø ===")
print(f"CSRF_TRUSTED_ORIGINS env: {os.environ.get('CSRF_TRUSTED_ORIGINS', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')}")
EOF

# –®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∫–µ
print_header "–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–û–°–¢–£–ü–ê –ö –ê–î–ú–ò–ù–ö–ï"

print_info "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∫–µ..."

# –¢–µ—Å—Ç 1: –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø
print_info "–¢–µ—Å—Ç 1: –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø"
if curl -f -s -o /dev/null http://localhost:8089/admin/; then
    print_success "localhost:8089/admin/ - –†–ê–ë–û–¢–ê–ï–¢"
else
    print_warning "localhost:8089/admin/ - –ø—Ä–æ–±–ª–µ–º—ã"
fi

# –¢–µ—Å—Ç 2: –î–æ—Å—Ç—É–ø –ø–æ IP
print_info "–¢–µ—Å—Ç 2: –î–æ—Å—Ç—É–ø –ø–æ IP"
if curl -f -s -o /dev/null http://${LOCAL_IP}:8089/admin/; then
    print_success "${LOCAL_IP}:8089/admin/ - –†–ê–ë–û–¢–ê–ï–¢"
else
    print_warning "${LOCAL_IP}:8089/admin/ - –ø—Ä–æ–±–ª–µ–º—ã"
fi

# –¢–µ—Å—Ç 3: –î–æ—Å—Ç—É–ø –ø–æ –¥–æ–º–µ–Ω—É
print_info "–¢–µ—Å—Ç 3: –î–æ—Å—Ç—É–ø –ø–æ –¥–æ–º–µ–Ω—É"
if curl -f -s -o /dev/null http://kemomail3.keenetic.pro:8089/admin/; then
    print_success "kemomail3.keenetic.pro:8089/admin/ - –†–ê–ë–û–¢–ê–ï–¢"
else
    print_warning "kemomail3.keenetic.pro:8089/admin/ - –ø—Ä–æ–±–ª–µ–º—ã"
fi

# –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ API –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
print_info "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ API –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç..."
if curl -f -s http://localhost:8089/api/v1/tochka/stats/ > /dev/null; then
    print_success "API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    print_error "–ü—Ä–æ–±–ª–µ–º–∞ —Å API –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
fi

# –®–∞–≥ 7: –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
print_info "üë§ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
docker-compose -f docker-compose.prod.yml exec -T backend python manage.py shell << 'EOF'
from django.contrib.auth import get_user_model

User = get_user_model()
try:
    admin_user = User.objects.get(username='admin')
    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: {admin_user.id})")
    print(f"   Email: {admin_user.email}")
    print(f"   –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {admin_user.is_superuser}")
    print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {admin_user.is_active}")
except User.DoesNotExist:
    print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    print("–°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    User.objects.create_superuser('admin', 'admin@example.com', 'admin')
    print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —Å–æ–∑–¥–∞–Ω!")
EOF

# –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
print_header "CSRF –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–´!"

print_success "üéâ CSRF –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!"
echo
print_info "üåê –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω–∫—É:"
echo "   URL:      http://kemomail3.keenetic.pro:8089/admin/"
echo "   –ê–ª—å—Ç URL: http://${LOCAL_IP}:8089/admin/"
echo "   –õ–æ–≥–∏–Ω:    admin"
echo "   –ü–∞—Ä–æ–ª—å:   admin"
echo
print_info "üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "   ‚úì CSRF_TRUSTED_ORIGINS –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤"
echo "   ‚úì CSRF_COOKIE_SECURE = False (–¥–ª—è HTTP)"
echo "   ‚úì CSRF_USE_SESSIONS = True"
echo "   ‚úì DEBUG = True (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)"
echo "   ‚úì ALLOWED_HOSTS = * (–≤—Å–µ —Ö–æ—Å—Ç—ã —Ä–∞–∑—Ä–µ—à–µ–Ω—ã)"
echo
print_info "üìã –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è:"
echo "   1. –û—á–∏—Å—Ç–∏—Ç–µ cookies –±—Ä–∞—É–∑–µ—Ä–∞"
echo "   2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–µ–∂–∏–º –∏–Ω–∫–æ–≥–Ω–∏—Ç–æ"
echo "   3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ IP –≤–º–µ—Å—Ç–æ –¥–æ–º–µ–Ω–∞: http://${LOCAL_IP}:8089/admin/"
echo "   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f docker-compose.prod.yml logs backend"
echo
print_warning "‚ö†Ô∏è  DEBUG=True –≤–∫–ª—é—á–µ–Ω –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ - –æ—Ç–∫–ª—é—á–∏—Ç–µ –≤ production!"
echo
print_success "–ì–æ—Ç–æ–≤–æ! –ê–¥–º–∏–Ω–∫–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å! üöÄ"