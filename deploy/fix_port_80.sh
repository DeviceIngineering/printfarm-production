#!/bin/bash

# PrintFarm - –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–†–¢–ê 80
# –†–µ—à–∞–µ–º –ø—Ä–æ–±–ª–µ–º—É –∑–∞–Ω—è—Ç–æ–≥–æ –ø–æ—Ä—Ç–∞ 80 –¥–ª—è nginx

echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–ù–§–õ–ò–ö–¢–ê –ü–û–†–¢–ê 80"
echo "================================="
echo "Nginx –Ω–µ –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è - –ø–æ—Ä—Ç 80 –∑–∞–Ω—è—Ç"
echo ""

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() { echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"; }
success() { echo -e "${GREEN}‚úÖ${NC} $1"; }
error() { echo -e "${RED}‚ùå${NC} $1"; }
warning() { echo -e "${YELLOW}‚ö†Ô∏è${NC} $1"; }

# ========================================================================
# –≠–¢–ê–ü 1: –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–û–†–¢–ê 80
# ========================================================================

log "–≠–¢–ê–ü 1: –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–û–ù–§–õ–ò–ö–¢–ê –ü–û–†–¢–ê 80"

log "1.1 –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –ø–æ—Ä—Ç 80..."
echo "üîç –ü–†–û–¶–ï–°–°–´ –ù–ê –ü–û–†–¢–£ 80:"
sudo lsof -i :80 2>/dev/null || echo "   lsof –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"

echo ""
echo "üîç NETSTAT –ü–û–†–¢ 80:"
sudo netstat -tulpn | grep :80 || echo "   netstat –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"

echo ""

# ========================================================================
# –≠–¢–ê–ü 2: –û–°–í–û–ë–û–ñ–î–ï–ù–ò–ï –ü–û–†–¢–ê 80
# ========================================================================

log "–≠–¢–ê–ü 2: –û–°–í–û–ë–û–ñ–î–ï–ù–ò–ï –ü–û–†–¢–ê 80"

log "2.1 –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down --remove-orphans >/dev/null 2>&1

log "2.2 –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç 80..."
# –ú–µ—Ç–æ–¥ 1: fuser
sudo fuser -k 80/tcp >/dev/null 2>&1 || true

# –ú–µ—Ç–æ–¥ 2: lsof + kill
PIDS=$(sudo lsof -ti:80 2>/dev/null)
if [ -n "$PIDS" ]; then
    warning "–£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 80: $PIDS"
    echo "$PIDS" | xargs sudo kill -9 >/dev/null 2>&1 || true
fi

# –ú–µ—Ç–æ–¥ 3: –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–æ–≤
sudo systemctl stop apache2 >/dev/null 2>&1 || true
sudo systemctl stop nginx >/dev/null 2>&1 || true
sudo systemctl stop lighttpd >/dev/null 2>&1 || true

sleep 3

log "2.3 –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ 80..."
PORT_80_CHECK=$(sudo netstat -tulpn | grep :80 || echo "free")
if [[ "$PORT_80_CHECK" == "free" ]]; then
    success "–ü–æ—Ä—Ç 80 –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω"
    USE_PORT_80=true
else
    warning "–ü–æ—Ä—Ç 80 –≤—Å—ë –µ—â—ë –∑–∞–Ω—è—Ç, –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ—Ä—Ç 8080"
    echo "–ß—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç: $PORT_80_CHECK"
    USE_PORT_80=false
fi

echo ""

# ========================================================================
# –≠–¢–ê–ü 3: –ó–ê–ü–£–°–ö –ë–ï–ó NGINX (–í–†–ï–ú–ï–ù–ù–û)
# ========================================================================

log "–≠–¢–ê–ü 3: –ó–ê–ü–£–°–ö –û–°–ù–û–í–ù–´–• –°–ï–†–í–ò–°–û–í"

log "3.1 –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –±–µ–∑ nginx..."
docker-compose up -d db redis backend frontend celery celery-beat --force-recreate
sleep 20

log "3.2 –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
echo "üìä –°–¢–ê–¢–£–° –°–ï–†–í–ò–°–û–í:"
docker-compose ps

# ========================================================================
# –≠–¢–ê–ü 4: –ù–ê–°–¢–†–û–ô–ö–ê NGINX
# ========================================================================

log "–≠–¢–ê–ü 4: –ù–ê–°–¢–†–û–ô–ö–ê –ò –ó–ê–ü–£–°–ö NGINX"

if [ "$USE_PORT_80" = true ]; then
    log "4.1 –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—Ç 80..."
    docker-compose up -d nginx --force-recreate
    sleep 10
    
    if docker-compose ps nginx | grep -q "Up"; then
        success "Nginx —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 80"
        NGINX_URL="http://kemomail3.keenetic.pro"
    else
        error "Nginx –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏..."
        docker-compose logs nginx --tail=10
        USE_PORT_80=false
    fi
fi

if [ "$USE_PORT_80" = false ]; then
    log "4.2 –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º nginx –Ω–∞ –ø–æ—Ä—Ç 8080..."
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é docker-compose.yml
    cp docker-compose.yml docker-compose.yml.backup
    
    # –ò–∑–º–µ–Ω—è–µ–º –ø–æ—Ä—Ç nginx –Ω–∞ 8080
    sed -i 's/"80:80"/"8080:80"/g' docker-compose.yml
    
    log "–ó–∞–ø—É—Å–∫–∞–µ–º nginx –Ω–∞ –ø–æ—Ä—Ç—É 8080..."
    docker-compose up -d nginx --force-recreate
    sleep 10
    
    if docker-compose ps nginx | grep -q "Up"; then
        success "Nginx –∑–∞–ø—É—â–µ–Ω –Ω–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–º –ø–æ—Ä—Ç—É 8080"
        NGINX_URL="http://kemomail3.keenetic.pro:8080"
    else
        warning "Nginx –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å, —Å–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ nginx"
        NGINX_URL="http://kemomail3.keenetic.pro:3000"
    fi
fi

# ========================================================================
# –≠–¢–ê–ü 5: –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï
# ========================================================================

log "–≠–¢–ê–ü 5: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–û–°–¢–£–ü–ù–û–°–¢–ò"

log "5.1 –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å frontend..."
FRONTEND_TEST=$(curl -s -w "%{http_code}" http://localhost:3000/ -o /tmp/frontend_test.txt 2>&1)
echo "üíª Frontend (–ø—Ä—è–º–æ–π): $FRONTEND_TEST"

log "5.2 –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ nginx (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω)..."
if docker-compose ps nginx | grep -q "Up"; then
    if [ "$USE_PORT_80" = true ]; then
        NGINX_TEST=$(curl -s -w "%{http_code}" http://localhost/ -o /tmp/nginx_test.txt 2>&1)
        echo "üåê Nginx (–ø–æ—Ä—Ç 80): $NGINX_TEST"
    else
        NGINX_TEST=$(curl -s -w "%{http_code}" http://localhost:8080/ -o /tmp/nginx_test.txt 2>&1)
        echo "üåê Nginx (–ø–æ—Ä—Ç 8080): $NGINX_TEST"
    fi
else
    warning "Nginx –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi

log "5.3 –ü—Ä–æ–≤–µ—Ä—è–µ–º backend API..."
API_TEST=$(curl -s -w "%{http_code}" http://localhost:8000/api/v1/settings/system-info/ -o /tmp/api_test.txt 2>&1)
echo "üîó Backend API: $API_TEST"

# ========================================================================
# –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢
# ========================================================================

echo ""
echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–†–¢–ê 80 –ó–ê–í–ï–†–®–ï–ù–û"
echo "================================="

echo ""
echo "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:"
echo "   ‚Ä¢ –ü–æ—Ä—Ç 80 —Å–≤–æ–±–æ–¥–µ–Ω: $([ "$USE_PORT_80" = true ] && echo "‚úÖ –î–ê" || echo "‚ùå –ù–ï–¢")"
echo "   ‚Ä¢ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω: $([ "$FRONTEND_TEST" = "200" ] && echo "‚úÖ –û–ö" || echo "‚ùå –ù–ï–î–û–°–¢–£–ü–ï–ù")"
echo "   ‚Ä¢ Nginx –∑–∞–ø—É—â–µ–Ω: $(docker-compose ps nginx | grep -q "Up" && echo "‚úÖ –î–ê" || echo "‚ùå –ù–ï–¢")"
echo "   ‚Ä¢ Backend API: $([ "$API_TEST" = "200" ] && echo "‚úÖ –û–ö" || echo "‚ùå –ù–ï–î–û–°–¢–£–ü–ï–ù")"

echo ""
echo "üåê –î–û–°–¢–£–ü–ù–´–ï –ê–î–†–ï–°–ê:"
if docker-compose ps nginx | grep -q "Up"; then
    success "–û—Å–Ω–æ–≤–Ω–æ–π –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ Nginx: $NGINX_URL"
else
    warning "Nginx –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø:"
fi
echo "   ‚Ä¢ Frontend: http://kemomail3.keenetic.pro:3000/"
echo "   ‚Ä¢ Backend: http://kemomail3.keenetic.pro:8000/"

echo ""
echo "üìã –°–¢–ê–¢–£–° –í–°–ï–• –ö–û–ù–¢–ï–ô–ù–ï–†–û–í:"
docker-compose ps

echo ""
if [ "$FRONTEND_TEST" = "200" ] && [ "$API_TEST" = "200" ]; then
    success "üéâ –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢!"
    echo ""
    echo "‚úÖ –¢–ï–ü–ï–†–¨ –ú–û–ñ–ù–û:"
    echo "   1. –û—Ç–∫—Ä—ã—Ç—å http://kemomail3.keenetic.pro:3000/"
    echo "   2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∏—Å—Ç–æ—Ä–∏—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–π"
    echo "   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    echo "   4. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã"
    
    if [ "$USE_PORT_80" = false ]; then
        echo ""
        warning "üìù –í–ù–ò–ú–ê–ù–ò–ï: Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 8080"
        echo "   ‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π URL: $NGINX_URL"
        echo "   ‚Ä¢ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: docker-compose.yml.backup"
        echo "   ‚Ä¢ –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –ø–æ—Ä—Ç—É 80: –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–ø–∏—é –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ"
    fi
    
else
    error "‚ùå –°–ò–°–¢–ï–ú–ê –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø"
    echo ""
    echo "üÜò –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:"
    [ "$FRONTEND_TEST" != "200" ] && echo "   ‚Ä¢ Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ: docker-compose logs frontend"
    [ "$API_TEST" != "200" ] && echo "   ‚Ä¢ Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ: docker-compose logs backend"
fi

echo ""
success "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –ø–æ—Ä—Ç–∞ 80 –∑–∞–≤–µ—Ä—à–µ–Ω–æ: $(date)"