#!/bin/bash

# PrintFarm Production - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ nginx –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏
# –£—Å—Ç—Ä–∞–Ω—è–µ—Ç –æ—à–∏–±–∫—É "Not Found" –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞

set -e

print_info() {
    echo -e "\033[0;34m‚ÑπÔ∏è  $1\033[0m"
}

print_success() {
    echo -e "\033[0;32m‚úÖ $1\033[0m"
}

print_info "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."

# –®–∞–≥ 1: –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π nginx.conf
cat > nginx.conf << 'EOF'
upstream backend {
    server backend:8000;
}

server {
    listen 80;
    server_name _;
    
    client_max_body_size 100M;
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # –ö–æ—Ä–Ω–µ–≤–æ–π –º–∞—Ä—à—Ä—É—Ç - –Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ backend
    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        
        # CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
    }
    
    # Static files (–µ—Å–ª–∏ –µ—Å—Ç—å)
    location /static/ {
        alias /app/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Media files (–µ—Å–ª–∏ –µ—Å—Ç—å)
    location /media/ {
        alias /app/media/;
        expires 1y;
        add_header Cache-Control "public";
    }
    
    # Healthcheck
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
EOF

print_success "nginx.conf –æ–±–Ω–æ–≤–ª–µ–Ω"

# –®–∞–≥ 2: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ALLOWED_HOSTS –≤ .env
print_info "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º ALLOWED_HOSTS..."
sed -i '/ALLOWED_HOSTS=/d' .env
echo "ALLOWED_HOSTS=*" >> .env
print_success "ALLOWED_HOSTS –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"

# –®–∞–≥ 3: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º nginx
print_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º nginx..."
docker-compose -f docker-compose.prod.yml restart nginx
sleep 5

# –®–∞–≥ 4: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º backend
print_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º backend..."
docker-compose -f docker-compose.prod.yml restart backend
sleep 10

# –®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä—É–µ–º
print_info "–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø..."

echo "=== –¢–ï–°–¢ 1: Health check ==="
if curl -f -s http://localhost:8089/health; then
    print_success "Health check —Ä–∞–±–æ—Ç–∞–µ—Ç!"
else
    echo "Health check –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo -e "\n=== –¢–ï–°–¢ 2: API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ==="
if curl -f -s http://localhost:8089/api/v1/tochka/stats/; then
    print_success "API —Ä–∞–±–æ—Ç–∞–µ—Ç!"
else
    echo "API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo -e "\n=== –¢–ï–°–¢ 3: –ö–æ—Ä–Ω–µ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ==="
if curl -f -s http://localhost:8089/ | head -5; then
    print_success "–ö–æ—Ä–Ω–µ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
else
    echo "–ö–æ—Ä–Ω–µ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

# –®–∞–≥ 6: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ nginx –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
print_info "–õ–æ–≥–∏ nginx:"
docker-compose -f docker-compose.prod.yml logs nginx | tail -10

print_success "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "–¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—å—Ç–µ: http://kemomail3.keenetic.pro:8089/api/v1/tochka/stats/"