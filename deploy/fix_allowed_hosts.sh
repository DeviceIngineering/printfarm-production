#!/bin/bash

# PrintFarm Production - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ALLOWED_HOSTS –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
# –£—Å—Ç—Ä–∞–Ω—è–µ—Ç –æ—à–∏–±–∫—É Bad Request (400)

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_header() {
    echo -e "\n${BLUE}===========================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}===========================================${NC}\n"
}

print_header "–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï ALLOWED_HOSTS"

# –®–∞–≥ 1: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
print_info "üîç –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ .env:"
grep ALLOWED_HOSTS .env || echo "ALLOWED_HOSTS –Ω–µ –Ω–∞–π–¥–µ–Ω"

# –®–∞–≥ 2: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º .env —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º —Å–ø–∏—Å–∫–æ–º —Ö–æ—Å—Ç–æ–≤
print_info "üîß –û–±–Ω–æ–≤–ª—è–µ–º ALLOWED_HOSTS..."

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
cp .env .env.backup.$(date +%Y%m%d_%H%M%S)

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Å—Ç—Ä–æ–∫—É ALLOWED_HOSTS
sed -i '/ALLOWED_HOSTS=/d' .env

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –ø–æ–ª–Ω—ã–º —Å–ø–∏—Å–∫–æ–º —Ö–æ—Å—Ç–æ–≤
cat >> .env << 'EOF'

# Allowed Hosts –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,kemomail3.keenetic.pro,*.keenetic.pro,*
EOF

print_success "ALLOWED_HOSTS –æ–±–Ω–æ–≤–ª–µ–Ω"

# –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
print_info "üìã –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
grep ALLOWED_HOSTS .env

# –®–∞–≥ 4: –û–±–Ω–æ–≤–ª—è–µ–º Django settings –¥–ª—è production
print_info "‚öôÔ∏è –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫..."

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
cat > temp_settings_patch.py << 'EOF'
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
import os

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Ö–æ—Å—Ç–æ–≤
ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '0.0.0.0',
    'kemomail3.keenetic.pro',
    '*.keenetic.pro',
    '*',  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ —Ö–æ—Å—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
]

# CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
SECURE_CROSS_ORIGIN_OPENER_POLICY = None
SECURE_REFERRER_POLICY = None

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ö–æ—Å—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
USE_X_FORWARDED_HOST = True
USE_X_FORWARDED_PORT = True

print("üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
EOF

# –®–∞–≥ 5: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º backend —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
print_info "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º backend..."
docker-compose -f docker-compose.prod.yml restart backend

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
sleep 10

# –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä—è–µ–º Django –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
print_info "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º Django –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
docker-compose -f docker-compose.prod.yml exec -T backend python manage.py shell << 'EOF'
from django.conf import settings
print("üîç Django ALLOWED_HOSTS:")
print(f"   {settings.ALLOWED_HOSTS}")
print(f"üêõ DEBUG —Ä–µ–∂–∏–º: {settings.DEBUG}")
print(f"üîí SECRET_KEY –∑–∞–¥–∞–Ω: {'SECRET_KEY' in dir(settings) and bool(settings.SECRET_KEY)}")

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É Host –∑–∞–≥–æ–ª–æ–≤–∫–∞
from django.http import HttpRequest
request = HttpRequest()
request.META['HTTP_HOST'] = 'kemomail3.keenetic.pro:8089'
try:
    from django.core.handlers.wsgi import WSGIRequest
    print(f"‚úÖ Host 'kemomail3.keenetic.pro:8089' –±—É–¥–µ—Ç –ø—Ä–∏–Ω—è—Ç")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Å Host: {e}")
EOF

# –®–∞–≥ 7: –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç—É–ø–∞
print_header "–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–û–°–¢–£–ü–ê"

print_info "üîç –¢–µ—Å—Ç 1: Localhost –Ω–∞ –ø–æ—Ä—Ç—É 8089..."
if curl -f -s http://localhost:8089/api/v1/tochka/stats/ > /dev/null 2>&1; then
    print_success "Localhost:8089 —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    print_warning "Localhost:8089 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

print_info "üîç –¢–µ—Å—Ç 2: –° –∑–∞–≥–æ–ª–æ–≤–∫–æ–º Host..."
if curl -f -s -H "Host: kemomail3.keenetic.pro:8089" http://localhost:8089/api/v1/tochka/stats/ > /dev/null 2>&1; then
    print_success "Host –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    print_warning "–ü—Ä–æ–±–ª–µ–º–∞ —Å Host –∑–∞–≥–æ–ª–æ–≤–∫–æ–º"
fi

print_info "üîç –¢–µ—Å—Ç 3: –ü–æ–ª–Ω—ã–π URL..."
if curl -f -s -H "Host: kemomail3.keenetic.pro" http://localhost:8089/api/v1/tochka/stats/ > /dev/null 2>&1; then
    print_success "–ü–æ–ª–Ω—ã–π URL —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    print_warning "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–ª–Ω—ã–º URL"
fi

# –®–∞–≥ 8: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
print_info "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ backend (–æ—à–∏–±–∫–∏):"
docker-compose -f docker-compose.prod.yml logs --tail=10 backend | grep -i error || echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

print_info "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ nginx:"
docker-compose -f docker-compose.prod.yml logs --tail=5 nginx

# –®–∞–≥ 9: –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π endpoint
print_info "üß™ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π endpoint..."
docker-compose -f docker-compose.prod.yml exec -T backend python manage.py shell << 'EOF'
# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π view –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
test_view_code = '''
from django.http import JsonResponse
from django.views.decorators.csrf import csrf_exempt

@csrf_exempt
def test_host(request):
    return JsonResponse({
        "host": request.get_host(),
        "http_host": request.META.get("HTTP_HOST", "not-set"),
        "server_name": request.META.get("SERVER_NAME", "not-set"),
        "server_port": request.META.get("SERVER_PORT", "not-set"),
        "allowed_hosts": list(getattr(request, "_cached_allowed_hosts", [])),
        "message": "Host test successful"
    })
'''
print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π endpoint —Å–æ–∑–¥–∞–Ω (–∫–æ–¥ –≥–æ—Ç–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è)")
EOF

# –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
print_header "–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û"

print_success "üéâ ALLOWED_HOSTS –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!"
echo
print_info "üåê –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:"
echo "   http://kemomail3.keenetic.pro:8089/api/v1/tochka/stats/"
echo
print_info "üîß –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ 400 —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è:"
echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f docker-compose.prod.yml logs backend"
echo "   2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Å–µ: docker-compose -f docker-compose.prod.yml restart"
echo "   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ—É—Ç–µ—Ä–∞ (–ø—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤)"
echo
print_info "üìã –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:"
echo "   –õ–æ–≥–∏ Django:  docker-compose -f docker-compose.prod.yml logs backend | grep ALLOWED"
echo "   –¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ: curl -v http://localhost:8089/health"
echo "   –ù–∞—Å—Ç—Ä–æ–π–∫–∏:     grep ALLOWED_HOSTS .env"
echo
print_warning "‚ö†Ô∏è  –¢–µ–∫—É—â–∏–µ ALLOWED_HOSTS –≤–∫–ª—é—á–∞—é—Ç '*' –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"
print_success "–ì–æ—Ç–æ–≤–æ! üöÄ"