#!/bin/bash

# PrintFarm Production - –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
# –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ—Ä—Ç–∞–º–∏ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã

echo "üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï PrintFarm Production"
echo "=================================================="
echo ""

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ${NC} $1"
}

error() {
    echo -e "${RED}‚ùå${NC} $1"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è${NC} $1"
}

log "–ù–∞—á–∏–Ω–∞–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ..."

# –®–∞–≥ 1: –ü–æ–ª–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "1/10 –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down >/dev/null 2>&1 || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
docker kill $(docker ps -q) >/dev/null 2>&1 || echo "–ù–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
success "–í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –®–∞–≥ 2: –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤
log "2/10 –û—á–∏—â–∞–µ–º Docker —Ä–µ—Å—É—Ä—Å—ã..."
docker container prune -f >/dev/null 2>&1
docker network prune -f >/dev/null 2>&1
docker network rm printfarm_default >/dev/null 2>&1 || echo "–°–µ—Ç—å —É–∂–µ —É–¥–∞–ª–µ–Ω–∞"
success "Docker —Ä–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã"

# –®–∞–≥ 3: –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤
log "3/10 –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Ä—Ç—ã..."

# –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ—Ä—Ç–∞—Ö
fuser -k 3000/tcp >/dev/null 2>&1 || echo "–ü–æ—Ä—Ç 3000 —Å–≤–æ–±–æ–¥–µ–Ω"
fuser -k 8000/tcp >/dev/null 2>&1 || echo "–ü–æ—Ä—Ç 8000 —Å–≤–æ–±–æ–¥–µ–Ω"
fuser -k 6379/tcp >/dev/null 2>&1 || echo "–ü–æ—Ä—Ç 6379 —Å–≤–æ–±–æ–¥–µ–Ω"
fuser -k 5432/tcp >/dev/null 2>&1 || echo "–ü–æ—Ä—Ç 5432 —Å–≤–æ–±–æ–¥–µ–Ω"

success "–ü–æ—Ä—Ç—ã –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã"

# –®–∞–≥ 4: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker —Å–ª—É–∂–±—ã
log "4/10 –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Docker —Å–ª—É–∂–±—É..."
systemctl restart docker
sleep 5
success "Docker —Å–ª—É–∂–±–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞"

# –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose.yml
log "5/10 –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
if [ ! -f "docker-compose.yml" ]; then
    error "–§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi
success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞"

# –®–∞–≥ 6: –ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
log "6/10 –ó–∞–ø—É—Å–∫–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
docker-compose up -d db --remove-orphans
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ë–î
if docker-compose ps db | grep -q "Up"; then
    success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞"
else
    error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
    log "–ü—Ä–æ–±—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ..."
    docker-compose up -d db --force-recreate
    sleep 10
fi

# –®–∞–≥ 7: –ó–∞–ø—É—Å–∫ Redis
log "7/10 –ó–∞–ø—É—Å–∫–∞–µ–º Redis..."
docker-compose up -d redis --remove-orphans
sleep 5

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
if docker-compose ps redis | grep -q "Up"; then
    success "Redis –∑–∞–ø—É—â–µ–Ω"
else
    warning "Redis –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
fi

# –®–∞–≥ 8: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
log "8/10 –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker-compose run --rm backend python manage.py migrate
success "–ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"

# –®–∞–≥ 9: –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
log "9/10 –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã..."
docker-compose run --rm backend python manage.py collectstatic --noinput
success "–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —Å–æ–±—Ä–∞–Ω—ã"

# –®–∞–≥ 10: –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
log "10/10 –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã..."
docker-compose up -d --remove-orphans
sleep 15

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
echo ""
echo "üìä –°–û–°–¢–û–Ø–ù–ò–ï –ö–û–ù–¢–ï–ô–ù–ï–†–û–í:"
docker-compose ps

echo ""
echo "üîç –ü–†–û–í–ï–†–ö–ê –°–ï–†–í–ò–°–û–í:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Backend API
if curl -f -s http://localhost:8000/api/v1/settings/system-info/ >/dev/null 2>&1; then
    success "Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç (http://localhost:8000)"
else
    error "Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend
if curl -f -s http://localhost:3000/ >/dev/null 2>&1; then
    success "Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç (http://localhost:3000)"
else
    warning "Frontend –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è React)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if docker-compose exec -T db pg_isready -U printfarm_user >/dev/null 2>&1; then
    success "PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
if docker-compose exec -T redis redis-cli ping 2>/dev/null | grep -q PONG; then
    success "Redis —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    warning "Redis –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo ""
echo "üéâ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo ""
echo "üåê –í–∞—à —Å–∞–π—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:"
echo "   üëâ http://kemomail3.keenetic.pro:3000/"
echo ""
echo "üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–¥—Ä–µ—Å–∞:"
echo "   ‚Ä¢ API: http://kemomail3.keenetic.pro:8000/"
echo "   ‚Ä¢ Admin: http://kemomail3.keenetic.pro:8000/admin/"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∏–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–Ω–µ—à–Ω–µ–≥–æ –∞–¥—Ä–µ—Å–∞
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–Ω–µ—à–Ω–µ–≥–æ –∞–¥—Ä–µ—Å–∞..."
if curl -f -s --connect-timeout 10 http://kemomail3.keenetic.pro:3000/ >/dev/null 2>&1; then
    success "–°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –≤–Ω–µ—à–Ω–µ–º—É –∞–¥—Ä–µ—Å—É!"
else
    warning "–í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 1-2 –º–∏–Ω—É—Ç—ã"
fi

echo ""
echo "üìù –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å:"
echo "   1. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 2-3 –º–∏–Ω—É—Ç—ã –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏"
echo "   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ firewall: ufw status"
echo "   3. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–æ–º"
echo ""

# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
echo "üìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ (–Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):"
sleep 3
docker-compose logs -f --tail=20