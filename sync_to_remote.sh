#!/bin/bash

echo "üöÄ PrintFarm v3.2 - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º"
echo "================================================"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
REMOTE_HOST="your-server.com"
REMOTE_USER="root"
REMOTE_PATH="/opt/printfarm"
LOCAL_PATH="."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —É–¥–∞–ª–µ–Ω–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—É
check_remote_connection() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —É–¥–∞–ª–µ–Ω–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—É..."
    
    if ssh -o ConnectTimeout=10 ${REMOTE_USER}@${REMOTE_HOST} "echo 'Connection OK'"; then
        log "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        error "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É ${REMOTE_HOST}"
        return 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
create_remote_backup() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    
    ssh ${REMOTE_USER}@${REMOTE_HOST} "
        cd ${REMOTE_PATH}
        
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è –±—ç–∫–∞–ø–æ–≤ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        mkdir -p backups
        
        # –ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if [ -f db.sqlite3 ]; then
            cp db.sqlite3 backups/db_backup_\$(date +%Y%m%d_%H%M%S).sqlite3
            log 'üì¶ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞'
        fi
        
        # –ë—ç–∫–∞–ø –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤
        if [ -d media ]; then
            tar -czf backups/media_backup_\$(date +%Y%m%d_%H%M%S).tar.gz media/
            log 'üñºÔ∏è  –ú–µ–¥–∏–∞ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã'
        fi
        
        # –ë—ç–∫–∞–ø –Ω–∞—Å—Ç—Ä–æ–µ–∫
        if [ -f .env ]; then
            cp .env backups/env_backup_\$(date +%Y%m%d_%H%M%S).env
            log '‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã'
        fi
    "
    
    if [ $? -eq 0 ]; then
        log "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞"
        return 0
    else
        error "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
        return 1
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
stop_remote_services() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ..."
    
    ssh ${REMOTE_USER}@${REMOTE_HOST} "
        cd ${REMOTE_PATH}
        
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        if [ -f docker-compose.yml ]; then
            docker-compose down
            log 'üê≥ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã'
        fi
        
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–æ–≤ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è)
        systemctl stop printfarm-celery 2>/dev/null || true
        systemctl stop printfarm-django 2>/dev/null || true
        systemctl stop nginx 2>/dev/null || true
        
        log 'üõë –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã'
    "
}

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤
sync_files() {
    log "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–æ–º..."
    
    # –ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è rsync
    EXCLUDE_FILE=$(mktemp)
    cat > ${EXCLUDE_FILE} << EOF
.git/
__pycache__/
*.pyc
.env
node_modules/
.DS_Store
*.log
backups/
db.sqlite3
media/
frontend/build/
frontend/node_modules/
.pytest_cache/
coverage/
*.orig
*.swp
*.swo
EOF

    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º backend
    log "üìÅ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è backend..."
    rsync -avz --delete --exclude-from=${EXCLUDE_FILE} \
          backend/ ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}/backend/
    
    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º frontend (—Ç–æ–ª—å–∫–æ –∏—Å—Ö–æ–¥–Ω–∏–∫–∏)
    log "üé® –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è frontend..."
    rsync -avz --delete --exclude-from=${EXCLUDE_FILE} \
          frontend/src/ ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}/frontend/src/
    rsync -av frontend/package*.json ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}/frontend/
    rsync -av frontend/tsconfig.json ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}/frontend/
    
    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º Docker —Ñ–∞–π–ª—ã –∏ —Å–∫—Ä–∏–ø—Ç—ã
    log "üê≥ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    rsync -av docker-compose*.yml ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}/
    rsync -av *.sh ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}/
    rsync -av README.md CLAUDE.md ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}/
    
    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º HTML —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    rsync -av test_*.html ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}/ 2>/dev/null || true
    
    rm ${EXCLUDE_FILE}
    
    if [ $? -eq 0 ]; then
        log "‚úÖ –§–∞–π–ª—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
        return 0
    else
        error "‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤"
        return 1
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ —Å–±–æ—Ä–∫–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
update_remote_dependencies() {
    log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    
    ssh ${REMOTE_USER}@${REMOTE_HOST} "
        cd ${REMOTE_PATH}
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        log 'üêç –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Python –ø–∞–∫–µ—Ç–æ–≤...'
        if [ -f backend/requirements.txt ]; then
            docker-compose run --rm backend pip install -r requirements.txt
        fi
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        log 'üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Node.js –ø–∞–∫–µ—Ç–æ–≤...'
        if [ -f frontend/package.json ]; then
            docker-compose run --rm frontend npm install
        fi
        
        # –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
        log 'üèóÔ∏è  –°–±–æ—Ä–∫–∞ frontend...'
        docker-compose run --rm frontend npm run build
        
        log '‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã'
    "
}

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
apply_migrations() {
    log "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    ssh ${REMOTE_USER}@${REMOTE_HOST} "
        cd ${REMOTE_PATH}
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π
        docker-compose run --rm backend python manage.py makemigrations
        
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
        docker-compose run --rm backend python manage.py migrate
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
        docker-compose run --rm backend python manage.py init_settings --warehouse-id='241ed919-a631-11ee-0a80-07a9000bb947'
        
        log 'üíæ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã'
    "
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
start_remote_services() {
    log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ..."
    
    ssh ${REMOTE_USER}@${REMOTE_HOST} "
        cd ${REMOTE_PATH}
        
        # –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        docker-compose up -d
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
        sleep 10
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
        docker-compose ps
        
        log 'üöÄ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã'
    "
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
health_check() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã..."
    
    ssh ${REMOTE_USER}@${REMOTE_HOST} "
        cd ${REMOTE_PATH}
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
        sleep 5
        response=\$(curl -s -w '%{http_code}' -o /dev/null http://localhost:8000/api/v1/products/)
        
        if [ \"\$response\" = '200' ]; then
            log '‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ'
        else
            warn '‚ö†Ô∏è  API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP \$response)'
        fi
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        settings_response=\$(curl -s -w '%{http_code}' -o /dev/null http://localhost:8000/api/v1/settings/system-info/)
        
        if [ \"\$settings_response\" = '200' ]; then
            log '‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ'
        else
            warn '‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã'
        fi
        
        log 'üéâ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!'
    "
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "–ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é PrintFarm v3.2..."
    echo "–£–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä: ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}"
    echo

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if ! check_remote_connection; then
        error "–ü—Ä–µ—Ä–≤–∞–Ω–æ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
        exit 1
    fi

    # –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
    if ! create_remote_backup; then
        error "–ü—Ä–µ—Ä–≤–∞–Ω–æ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞"
        exit 1
    fi

    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    stop_remote_services

    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤
    if ! sync_files; then
        error "–ü—Ä–µ—Ä–≤–∞–Ω–æ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"
        exit 1
    fi

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    update_remote_dependencies

    # –ú–∏–≥—Ä–∞—Ü–∏–∏
    apply_migrations

    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    start_remote_services

    # –ü—Ä–æ–≤–µ—Ä–∫–∞
    health_check

    echo
    log "üéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è PrintFarm v3.2 –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    log "üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:"
    log "   - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose logs -f"
    log "   - –°—Ç–∞—Ç—É—Å: docker-compose ps"
    log "   - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
    log "   - –ù–∞—Å—Ç—Ä–æ–π–∫–∏: curl http://localhost:8000/api/v1/settings/summary/"
    echo
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    --help|-h)
        echo "PrintFarm v3.2 Sync Script"
        echo "Usage: $0 [options]"
        echo ""
        echo "Options:"
        echo "  --help, -h     –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        echo "  --dry-run      –ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–æ –±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
        echo "  --backup-only  –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø"
        echo ""
        echo "Environment variables:"
        echo "  REMOTE_HOST    –ê–¥—Ä–µ—Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"
        echo "  REMOTE_USER    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ"
        echo "  REMOTE_PATH    –ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
        exit 0
        ;;
    --dry-run)
        warn "–†–µ–∂–∏–º DRY-RUN: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
        log "rsync –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω—ã:"
        echo "backend/ -> ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}/backend/"
        echo "frontend/src/ -> ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}/frontend/src/"
        exit 0
        ;;
    --backup-only)
        log "–†–µ–∂–∏–º BACKUP-ONLY: —Å–æ–∑–¥–∞–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é"
        check_remote_connection && create_remote_backup
        exit $?
        ;;
    *)
        main
        ;;
esac