#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è internal errors –Ω–∞ production —Å–µ—Ä–≤–µ—Ä–µ
# PrintFarm Production Fix Script v1.0

echo "üîß PrintFarm Production Error Fix Script"
echo "========================================="

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

log "üü° –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ..."

# 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "1Ô∏è‚É£ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down
sleep 5

# 2. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ volumes
log "2Ô∏è‚É£ –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker system prune -f
docker volume prune -f

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
log "3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é .env..."
if [ ! -f ".env" ]; then
    log "üìù –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª..."
    cat > .env << 'EOF'
# Django Settings
SECRET_KEY=django-insecure-printfarm-production-key-2025
DEBUG=False
ALLOWED_HOSTS=localhost,127.0.0.1,kemomail3.keenetic.pro,*

# Database Configuration
POSTGRES_DB=printfarm_db
POSTGRES_USER=printfarm_user
POSTGRES_PASSWORD=secure_password123!
DB_HOST=db
DB_PORT=5432

# Redis Configuration
REDIS_URL=redis://redis:6379/0

# Celery Configuration
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# –ú–æ–π–°–∫–ª–∞–¥ API Configuration
MOYSKLAD_TOKEN=f9be4985f5e3488716c040ca52b8e04c7c0f9e0b
MOYSKLAD_DEFAULT_WAREHOUSE=241ed919-a631-11ee-0a80-07a9000bb947

# Simple Print API Configuration
SIMPLEPRINT_API_KEY=your-api-key
SIMPLEPRINT_COMPANY_ID=27286
SIMPLEPRINT_USER_ID=31471

# Django Settings Module
DJANGO_SETTINGS_MODULE=config.settings.production
EOF
    log "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
else
    log "‚úÖ .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# 4. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –ª–æ–≥–æ–≤ –∏ –º–µ–¥–∏–∞
log "4Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
mkdir -p backend/logs
mkdir -p backend/media/products
mkdir -p backend/static

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose —Ñ–∞–π–ª–∞
log "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º docker-compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
docker-compose config > /dev/null
if [ $? -eq 0 ]; then
    log "‚úÖ docker-compose.yml –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
else
    log "‚ùå –û—à–∏–±–∫–∞ –≤ docker-compose.yml"
    exit 1
fi

# 6. –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "6Ô∏è‚É£ –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose up --build -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
log "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose ps

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ backend
log "8Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ backend..."
echo "=== BACKEND LOGS ==="
docker-compose logs backend --tail=20

# 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ nginx
log "9Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ nginx..."
echo "=== NGINX LOGS ==="
docker-compose logs nginx --tail=10

# 10. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
log "üîü –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ Django..."
docker-compose exec -T backend python manage.py migrate

# 11. –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
log "1Ô∏è‚É£1Ô∏è‚É£ –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã..."
docker-compose exec -T backend python manage.py collectstatic --noinput

# 12. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
log "1Ô∏è‚É£2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API..."
sleep 10

# –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ curl
if command -v curl &> /dev/null; then
    echo "–¢–µ—Å—Ç–∏—Ä—É–µ–º HTTP –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å..."
    curl -s -o /dev/null -w "%{http_code}" http://localhost/api/v1/ || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è"
    echo
fi

# 13. –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
log "1Ô∏è‚É£3Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞..."

echo
echo "üîç –¢–ï–ö–£–©–ò–ô –°–¢–ê–¢–£–° –°–ï–†–í–ò–°–û–í:"
docker-compose ps

echo
echo "üìä –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –†–ï–°–£–†–°–û–í:"
docker stats --no-stream

echo
echo "üåê –ü–†–û–í–ï–†–¨–¢–ï –î–û–°–¢–£–ü–ù–û–°–¢–¨:"
echo "- Frontend: http://localhost"
echo "- API: http://localhost/api/v1/"
echo "- Admin: http://localhost/admin/"

echo
echo "üìã –ü–û–õ–ï–ó–ù–´–ï –ö–û–ú–ê–ù–î–´:"
echo "- –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose logs [service]"
echo "- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart [service]"
echo "- –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
echo "- Django shell: docker-compose exec backend python manage.py shell"

echo
log "‚úÖ –°–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo "üéØ –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs backend"