name: 🧪 Test and Build

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    
    - name: 🔧 Setup test environment
      run: |
        cat > backend/.env << EOF
        SECRET_KEY=test-secret-key
        DEBUG=True
        ALLOWED_HOSTS=localhost,127.0.0.1
        POSTGRES_DB=test_db
        POSTGRES_USER=test_user
        POSTGRES_PASSWORD=test_pass
        DB_HOST=localhost
        DB_PORT=5432
        REDIS_URL=redis://localhost:6379/0
        DJANGO_SETTINGS_MODULE=config.settings.test
        EOF
    
    - name: 🗃️ Run migrations
      working-directory: backend
      run: |
        python manage.py migrate --noinput
    
    - name: 🧪 Run tests
      working-directory: backend
      run: |
        python manage.py test --parallel --keepdb
    
    - name: 📊 Generate coverage report
      working-directory: backend
      run: |
        coverage run --source='.' manage.py test
        coverage report
        coverage xml
    
    - name: 📈 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: backend/coverage.xml
        flags: backend
        name: backend-coverage

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: 🏗️ Build backend image
      run: |
        docker build -f docker/django/Dockerfile -t printfarm-backend:test .
    
    - name: 🏗️ Build frontend image
      run: |
        docker build -f docker/react/Dockerfile -t printfarm-frontend:test .
    
    - name: 🏗️ Build nginx image
      run: |
        docker build -f docker/nginx/Dockerfile -t printfarm-nginx:test .
    
    - name: ✅ Build successful
      run: |
        echo "✅ All images built successfully!"
        docker images | grep printfarm